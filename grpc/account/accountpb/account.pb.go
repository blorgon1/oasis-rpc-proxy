// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: grpc/account/accountpb/account.proto

package accountpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GeneralAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance            []byte `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	Nonce              uint64 `protobuf:"varint,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	TransfersNotBefore uint64 `protobuf:"varint,3,opt,name=TransfersNotBefore,proto3" json:"TransfersNotBefore,omitempty"`
}

func (x *GeneralAccount) Reset() {
	*x = GeneralAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralAccount) ProtoMessage() {}

func (x *GeneralAccount) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralAccount.ProtoReflect.Descriptor instead.
func (*GeneralAccount) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{0}
}

func (x *GeneralAccount) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *GeneralAccount) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GeneralAccount) GetTransfersNotBefore() uint64 {
	if x != nil {
		return x.TransfersNotBefore
	}
	return 0
}

type SharePool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance     []byte `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	TotalShares []byte `protobuf:"bytes,2,opt,name=TotalShares,proto3" json:"TotalShares,omitempty"`
}

func (x *SharePool) Reset() {
	*x = SharePool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharePool) ProtoMessage() {}

func (x *SharePool) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharePool.ProtoReflect.Descriptor instead.
func (*SharePool) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{1}
}

func (x *SharePool) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *SharePool) GetTotalShares() []byte {
	if x != nil {
		return x.TotalShares
	}
	return nil
}

type CommissionRateStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	Rate  []byte `protobuf:"bytes,2,opt,name=Rate,proto3" json:"Rate,omitempty"`
}

func (x *CommissionRateStep) Reset() {
	*x = CommissionRateStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRateStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRateStep) ProtoMessage() {}

func (x *CommissionRateStep) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRateStep.ProtoReflect.Descriptor instead.
func (*CommissionRateStep) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{2}
}

func (x *CommissionRateStep) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *CommissionRateStep) GetRate() []byte {
	if x != nil {
		return x.Rate
	}
	return nil
}

type CommissionRateBoundStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start   uint64 `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	RateMin []byte `protobuf:"bytes,2,opt,name=RateMin,proto3" json:"RateMin,omitempty"`
	RateMax []byte `protobuf:"bytes,3,opt,name=RateMax,proto3" json:"RateMax,omitempty"`
}

func (x *CommissionRateBoundStep) Reset() {
	*x = CommissionRateBoundStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionRateBoundStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionRateBoundStep) ProtoMessage() {}

func (x *CommissionRateBoundStep) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionRateBoundStep.ProtoReflect.Descriptor instead.
func (*CommissionRateBoundStep) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{3}
}

func (x *CommissionRateBoundStep) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *CommissionRateBoundStep) GetRateMin() []byte {
	if x != nil {
		return x.RateMin
	}
	return nil
}

func (x *CommissionRateBoundStep) GetRateMax() []byte {
	if x != nil {
		return x.RateMax
	}
	return nil
}

type CommissionSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rates  []*CommissionRateStep      `protobuf:"bytes,1,rep,name=Rates,proto3" json:"Rates,omitempty"`
	Bounds []*CommissionRateBoundStep `protobuf:"bytes,2,rep,name=Bounds,proto3" json:"Bounds,omitempty"`
}

func (x *CommissionSchedule) Reset() {
	*x = CommissionSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommissionSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionSchedule) ProtoMessage() {}

func (x *CommissionSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionSchedule.ProtoReflect.Descriptor instead.
func (*CommissionSchedule) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{4}
}

func (x *CommissionSchedule) GetRates() []*CommissionRateStep {
	if x != nil {
		return x.Rates
	}
	return nil
}

func (x *CommissionSchedule) GetBounds() []*CommissionRateBoundStep {
	if x != nil {
		return x.Bounds
	}
	return nil
}

// ThresholdKind is the kind of staking threshold.
type ThresholdKinds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kinds []*StakeThreshold `protobuf:"bytes,1,rep,name=Kinds,proto3" json:"Kinds,omitempty"`
}

func (x *ThresholdKinds) Reset() {
	*x = ThresholdKinds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThresholdKinds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThresholdKinds) ProtoMessage() {}

func (x *ThresholdKinds) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThresholdKinds.ProtoReflect.Descriptor instead.
func (*ThresholdKinds) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{5}
}

func (x *ThresholdKinds) GetKinds() []*StakeThreshold {
	if x != nil {
		return x.Kinds
	}
	return nil
}

// StakeThreshold is a stake threshold as used in the stake accumulator.
type StakeThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Global   string `protobuf:"bytes,1,opt,name=Global,proto3" json:"Global,omitempty"`
	Constant []byte `protobuf:"bytes,2,opt,name=Constant,proto3" json:"Constant,omitempty"`
}

func (x *StakeThreshold) Reset() {
	*x = StakeThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeThreshold) ProtoMessage() {}

func (x *StakeThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeThreshold.ProtoReflect.Descriptor instead.
func (*StakeThreshold) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{6}
}

func (x *StakeThreshold) GetGlobal() string {
	if x != nil {
		return x.Global
	}
	return ""
}

func (x *StakeThreshold) GetConstant() []byte {
	if x != nil {
		return x.Constant
	}
	return nil
}

type StakeAccumulator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Claims are the stake claims that must be satisfied at any given point. Adding a new claim is
	// only possible if all of the existing claims plus the new claim is satisfied.
	Claims map[string]*ThresholdKinds `protobuf:"bytes,1,rep,name=Claims,proto3" json:"Claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StakeAccumulator) Reset() {
	*x = StakeAccumulator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeAccumulator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeAccumulator) ProtoMessage() {}

func (x *StakeAccumulator) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeAccumulator.ProtoReflect.Descriptor instead.
func (*StakeAccumulator) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{7}
}

func (x *StakeAccumulator) GetClaims() map[string]*ThresholdKinds {
	if x != nil {
		return x.Claims
	}
	return nil
}

type EscrowAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active             *SharePool          `protobuf:"bytes,1,opt,name=Active,proto3" json:"Active,omitempty"`
	Debonding          *SharePool          `protobuf:"bytes,2,opt,name=Debonding,proto3" json:"Debonding,omitempty"`
	CommissionSchedule *CommissionSchedule `protobuf:"bytes,3,opt,name=CommissionSchedule,proto3" json:"CommissionSchedule,omitempty"`
	StakeAccumulator   *StakeAccumulator   `protobuf:"bytes,4,opt,name=StakeAccumulator,proto3" json:"StakeAccumulator,omitempty"`
}

func (x *EscrowAccount) Reset() {
	*x = EscrowAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscrowAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscrowAccount) ProtoMessage() {}

func (x *EscrowAccount) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscrowAccount.ProtoReflect.Descriptor instead.
func (*EscrowAccount) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{8}
}

func (x *EscrowAccount) GetActive() *SharePool {
	if x != nil {
		return x.Active
	}
	return nil
}

func (x *EscrowAccount) GetDebonding() *SharePool {
	if x != nil {
		return x.Debonding
	}
	return nil
}

func (x *EscrowAccount) GetCommissionSchedule() *CommissionSchedule {
	if x != nil {
		return x.CommissionSchedule
	}
	return nil
}

func (x *EscrowAccount) GetStakeAccumulator() *StakeAccumulator {
	if x != nil {
		return x.StakeAccumulator
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	General *GeneralAccount `protobuf:"bytes,1,opt,name=General,proto3" json:"General,omitempty"`
	Escrow  *EscrowAccount  `protobuf:"bytes,2,opt,name=Escrow,proto3" json:"Escrow,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{9}
}

func (x *Account) GetGeneral() *GeneralAccount {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *Account) GetEscrow() *EscrowAccount {
	if x != nil {
		return x.Escrow
	}
	return nil
}

type GetByAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Height  int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetByAddressRequest) Reset() {
	*x = GetByAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByAddressRequest) ProtoMessage() {}

func (x *GetByAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByAddressRequest.ProtoReflect.Descriptor instead.
func (*GetByAddressRequest) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{10}
}

func (x *GetByAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetByAddressRequest) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetByAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetByAddressResponse) Reset() {
	*x = GetByAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_account_accountpb_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByAddressResponse) ProtoMessage() {}

func (x *GetByAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_account_accountpb_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByAddressResponse.ProtoReflect.Descriptor instead.
func (*GetByAddressResponse) Descriptor() ([]byte, []int) {
	return file_grpc_account_accountpb_account_proto_rawDescGZIP(), []int{11}
}

func (x *GetByAddressResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

var File_grpc_account_accountpb_account_proto protoreflect.FileDescriptor

var file_grpc_account_accountpb_account_proto_rawDesc = []byte{
	0x0a, 0x24, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x70, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x4e, 0x6f,
	0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x4e, 0x6f, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x22, 0x47, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x17, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x52, 0x61,
	0x74, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x22,
	0x81, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x05, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x65, 0x70, 0x52, 0x06, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x4b, 0x69, 0x6e, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x05, 0x4b,
	0x69, 0x6e, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x3d, 0x0a, 0x06, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41,
	0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x1a, 0x52,
	0x0a, 0x0b, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x09, 0x44, 0x65, 0x62, 0x6f, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x12, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x06, 0x45, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45,
	0x73, 0x63, 0x72, 0x6f, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x45, 0x73,
	0x63, 0x72, 0x6f, 0x77, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x42, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0x5f, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x69, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x2f, 0x6f, 0x61, 0x73, 0x69, 0x73, 0x2d, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_account_accountpb_account_proto_rawDescOnce sync.Once
	file_grpc_account_accountpb_account_proto_rawDescData = file_grpc_account_accountpb_account_proto_rawDesc
)

func file_grpc_account_accountpb_account_proto_rawDescGZIP() []byte {
	file_grpc_account_accountpb_account_proto_rawDescOnce.Do(func() {
		file_grpc_account_accountpb_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_account_accountpb_account_proto_rawDescData)
	})
	return file_grpc_account_accountpb_account_proto_rawDescData
}

var file_grpc_account_accountpb_account_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_grpc_account_accountpb_account_proto_goTypes = []interface{}{
	(*GeneralAccount)(nil),          // 0: account.GeneralAccount
	(*SharePool)(nil),               // 1: account.SharePool
	(*CommissionRateStep)(nil),      // 2: account.CommissionRateStep
	(*CommissionRateBoundStep)(nil), // 3: account.CommissionRateBoundStep
	(*CommissionSchedule)(nil),      // 4: account.CommissionSchedule
	(*ThresholdKinds)(nil),          // 5: account.ThresholdKinds
	(*StakeThreshold)(nil),          // 6: account.StakeThreshold
	(*StakeAccumulator)(nil),        // 7: account.StakeAccumulator
	(*EscrowAccount)(nil),           // 8: account.EscrowAccount
	(*Account)(nil),                 // 9: account.Account
	(*GetByAddressRequest)(nil),     // 10: account.GetByAddressRequest
	(*GetByAddressResponse)(nil),    // 11: account.GetByAddressResponse
	nil,                             // 12: account.StakeAccumulator.ClaimsEntry
}
var file_grpc_account_accountpb_account_proto_depIdxs = []int32{
	2,  // 0: account.CommissionSchedule.Rates:type_name -> account.CommissionRateStep
	3,  // 1: account.CommissionSchedule.Bounds:type_name -> account.CommissionRateBoundStep
	6,  // 2: account.ThresholdKinds.Kinds:type_name -> account.StakeThreshold
	12, // 3: account.StakeAccumulator.Claims:type_name -> account.StakeAccumulator.ClaimsEntry
	1,  // 4: account.EscrowAccount.Active:type_name -> account.SharePool
	1,  // 5: account.EscrowAccount.Debonding:type_name -> account.SharePool
	4,  // 6: account.EscrowAccount.CommissionSchedule:type_name -> account.CommissionSchedule
	7,  // 7: account.EscrowAccount.StakeAccumulator:type_name -> account.StakeAccumulator
	0,  // 8: account.Account.General:type_name -> account.GeneralAccount
	8,  // 9: account.Account.Escrow:type_name -> account.EscrowAccount
	9,  // 10: account.GetByAddressResponse.account:type_name -> account.Account
	5,  // 11: account.StakeAccumulator.ClaimsEntry.value:type_name -> account.ThresholdKinds
	10, // 12: account.AccountService.GetByAddress:input_type -> account.GetByAddressRequest
	11, // 13: account.AccountService.GetByAddress:output_type -> account.GetByAddressResponse
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_grpc_account_accountpb_account_proto_init() }
func file_grpc_account_accountpb_account_proto_init() {
	if File_grpc_account_accountpb_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_account_accountpb_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharePool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionRateStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionRateBoundStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommissionSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThresholdKinds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeAccumulator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscrowAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_account_accountpb_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_account_accountpb_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_account_accountpb_account_proto_goTypes,
		DependencyIndexes: file_grpc_account_accountpb_account_proto_depIdxs,
		MessageInfos:      file_grpc_account_accountpb_account_proto_msgTypes,
	}.Build()
	File_grpc_account_accountpb_account_proto = out.File
	file_grpc_account_accountpb_account_proto_rawDesc = nil
	file_grpc_account_accountpb_account_proto_goTypes = nil
	file_grpc_account_accountpb_account_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	GetByAddress(ctx context.Context, in *GetByAddressRequest, opts ...grpc.CallOption) (*GetByAddressResponse, error)
}

type accountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountServiceClient(cc grpc.ClientConnInterface) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) GetByAddress(ctx context.Context, in *GetByAddressRequest, opts ...grpc.CallOption) (*GetByAddressResponse, error) {
	out := new(GetByAddressResponse)
	err := c.cc.Invoke(ctx, "/account.AccountService/GetByAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	GetByAddress(context.Context, *GetByAddressRequest) (*GetByAddressResponse, error)
}

// UnimplementedAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServiceServer struct {
}

func (*UnimplementedAccountServiceServer) GetByAddress(context.Context, *GetByAddressRequest) (*GetByAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByAddress not implemented")
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_GetByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetByAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetByAddress(ctx, req.(*GetByAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByAddress",
			Handler:    _AccountService_GetByAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/account/accountpb/account.proto",
}
