// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block/blockpb/block.proto

package blockpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Block struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	LastCommit           *Commit  `protobuf:"bytes,2,opt,name=last_commit,json=lastCommit,proto3" json:"last_commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{0}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetLastCommit() *Commit {
	if m != nil {
		return m.LastCommit
	}
	return nil
}

type Header struct {
	Version  *Version             `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ChainId  string               `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Height   int64                `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Time     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	NumTxs   int64                `protobuf:"varint,5,opt,name=num_txs,json=numTxs,proto3" json:"num_txs,omitempty"`
	TotalTxs int64                `protobuf:"varint,6,opt,name=total_txs,json=totalTxs,proto3" json:"total_txs,omitempty"`
	// prev block info
	LastBlockId *BlockID `protobuf:"bytes,7,opt,name=last_block_id,json=lastBlockId,proto3" json:"last_block_id,omitempty"`
	// hashes of block data
	LastCommitHash string `protobuf:"bytes,8,opt,name=last_commit_hash,json=lastCommitHash,proto3" json:"last_commit_hash,omitempty"`
	DataHash       string `protobuf:"bytes,9,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// hashes from the app output from the prev block
	ValidatorsHash     string `protobuf:"bytes,10,opt,name=validators_hash,json=validatorsHash,proto3" json:"validators_hash,omitempty"`
	NextValidatorsHash string `protobuf:"bytes,11,opt,name=next_validators_hash,json=nextValidatorsHash,proto3" json:"next_validators_hash,omitempty"`
	ConsensusHash      string `protobuf:"bytes,12,opt,name=consensus_hash,json=consensusHash,proto3" json:"consensus_hash,omitempty"`
	AppHash            string `protobuf:"bytes,13,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
	// root hash of all results from the txs from the previous block
	LastResultsHash string `protobuf:"bytes,14,opt,name=last_results_hash,json=lastResultsHash,proto3" json:"last_results_hash,omitempty"`
	// consensus info
	EvidenceHash         string   `protobuf:"bytes,15,opt,name=evidence_hash,json=evidenceHash,proto3" json:"evidence_hash,omitempty"`
	ProposerAddress      string   `protobuf:"bytes,16,opt,name=proposer_address,json=proposerAddress,proto3" json:"proposer_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{1}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Header) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *Header) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Header) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Header) GetNumTxs() int64 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

func (m *Header) GetTotalTxs() int64 {
	if m != nil {
		return m.TotalTxs
	}
	return 0
}

func (m *Header) GetLastBlockId() *BlockID {
	if m != nil {
		return m.LastBlockId
	}
	return nil
}

func (m *Header) GetLastCommitHash() string {
	if m != nil {
		return m.LastCommitHash
	}
	return ""
}

func (m *Header) GetDataHash() string {
	if m != nil {
		return m.DataHash
	}
	return ""
}

func (m *Header) GetValidatorsHash() string {
	if m != nil {
		return m.ValidatorsHash
	}
	return ""
}

func (m *Header) GetNextValidatorsHash() string {
	if m != nil {
		return m.NextValidatorsHash
	}
	return ""
}

func (m *Header) GetConsensusHash() string {
	if m != nil {
		return m.ConsensusHash
	}
	return ""
}

func (m *Header) GetAppHash() string {
	if m != nil {
		return m.AppHash
	}
	return ""
}

func (m *Header) GetLastResultsHash() string {
	if m != nil {
		return m.LastResultsHash
	}
	return ""
}

func (m *Header) GetEvidenceHash() string {
	if m != nil {
		return m.EvidenceHash
	}
	return ""
}

func (m *Header) GetProposerAddress() string {
	if m != nil {
		return m.ProposerAddress
	}
	return ""
}

type Version struct {
	Block                uint64   `protobuf:"varint,1,opt,name=block,proto3" json:"block,omitempty"`
	App                  uint64   `protobuf:"varint,2,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{2}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetBlock() uint64 {
	if m != nil {
		return m.Block
	}
	return 0
}

func (m *Version) GetApp() uint64 {
	if m != nil {
		return m.App
	}
	return 0
}

type BlockID struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockID) Reset()         { *m = BlockID{} }
func (m *BlockID) String() string { return proto.CompactTextString(m) }
func (*BlockID) ProtoMessage()    {}
func (*BlockID) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{3}
}

func (m *BlockID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockID.Unmarshal(m, b)
}
func (m *BlockID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockID.Marshal(b, m, deterministic)
}
func (m *BlockID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockID.Merge(m, src)
}
func (m *BlockID) XXX_Size() int {
	return xxx_messageInfo_BlockID.Size(m)
}
func (m *BlockID) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockID.DiscardUnknown(m)
}

var xxx_messageInfo_BlockID proto.InternalMessageInfo

func (m *BlockID) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Commit struct {
	BlockId              *BlockID `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Height               int64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round                int64    `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	Hash                 string   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	Votes                []*Vote  `protobuf:"bytes,5,rep,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{4}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetBlockId() *BlockID {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *Commit) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Commit) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Commit) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Commit) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

// Vote represents a prevote, precommit, or commit vote from validators for consensus.
type Vote struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ValidatorAddress     string   `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	ValidatorIndex       int64    `protobuf:"varint,3,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	Signature            string   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{5}
}

func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (m *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(m, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Vote) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

func (m *Vote) GetValidatorIndex() int64 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

func (m *Vote) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type GetByHeightRequest struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByHeightRequest) Reset()         { *m = GetByHeightRequest{} }
func (m *GetByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetByHeightRequest) ProtoMessage()    {}
func (*GetByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{6}
}

func (m *GetByHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByHeightRequest.Unmarshal(m, b)
}
func (m *GetByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByHeightRequest.Marshal(b, m, deterministic)
}
func (m *GetByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByHeightRequest.Merge(m, src)
}
func (m *GetByHeightRequest) XXX_Size() int {
	return xxx_messageInfo_GetByHeightRequest.Size(m)
}
func (m *GetByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByHeightRequest proto.InternalMessageInfo

func (m *GetByHeightRequest) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetByHeightResponse struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByHeightResponse) Reset()         { *m = GetByHeightResponse{} }
func (m *GetByHeightResponse) String() string { return proto.CompactTextString(m) }
func (*GetByHeightResponse) ProtoMessage()    {}
func (*GetByHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b15a8f97b71c787, []int{7}
}

func (m *GetByHeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByHeightResponse.Unmarshal(m, b)
}
func (m *GetByHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByHeightResponse.Marshal(b, m, deterministic)
}
func (m *GetByHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByHeightResponse.Merge(m, src)
}
func (m *GetByHeightResponse) XXX_Size() int {
	return xxx_messageInfo_GetByHeightResponse.Size(m)
}
func (m *GetByHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByHeightResponse proto.InternalMessageInfo

func (m *GetByHeightResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterType((*Block)(nil), "block.Block")
	proto.RegisterType((*Header)(nil), "block.Header")
	proto.RegisterType((*Version)(nil), "block.Version")
	proto.RegisterType((*BlockID)(nil), "block.BlockID")
	proto.RegisterType((*Commit)(nil), "block.Commit")
	proto.RegisterType((*Vote)(nil), "block.Vote")
	proto.RegisterType((*GetByHeightRequest)(nil), "block.GetByHeightRequest")
	proto.RegisterType((*GetByHeightResponse)(nil), "block.GetByHeightResponse")
}

func init() { proto.RegisterFile("block/blockpb/block.proto", fileDescriptor_9b15a8f97b71c787) }

var fileDescriptor_9b15a8f97b71c787 = []byte{
	// 669 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x54, 0x4f, 0x73, 0xd2, 0x4e,
	0x18, 0xfe, 0xa5, 0x04, 0x02, 0x6f, 0x80, 0xd2, 0xfd, 0x75, 0x34, 0xa0, 0x8e, 0x35, 0x4e, 0x47,
	0xaa, 0x4e, 0xaa, 0x78, 0xf2, 0x68, 0x75, 0xb4, 0xbd, 0xc6, 0x4e, 0x0f, 0x1e, 0xcc, 0x2c, 0x64,
	0x85, 0x8c, 0x90, 0x5d, 0xb3, 0x1b, 0x86, 0x7e, 0x09, 0xcf, 0x7e, 0x3b, 0xbf, 0x8a, 0xb3, 0xef,
	0x6e, 0x80, 0x68, 0x2f, 0xb0, 0xef, 0xf3, 0x3c, 0xfb, 0xfe, 0xcf, 0xc2, 0x70, 0xba, 0xe4, 0xb3,
	0xef, 0xe7, 0xf8, 0x2b, 0xa6, 0xe6, 0x3f, 0x12, 0x05, 0x57, 0x9c, 0x34, 0xd1, 0x18, 0x3d, 0x9e,
	0x73, 0x3e, 0x5f, 0xb2, 0x73, 0x04, 0xa7, 0xe5, 0xb7, 0x73, 0x95, 0xad, 0x98, 0x54, 0x74, 0x25,
	0x8c, 0x2e, 0xfc, 0x0a, 0xcd, 0x0b, 0xad, 0x24, 0xa7, 0xd0, 0x5a, 0x30, 0x9a, 0xb2, 0x22, 0x70,
	0x4e, 0x9c, 0xb1, 0x3f, 0xe9, 0x45, 0xc6, 0xdd, 0x25, 0x82, 0xb1, 0x25, 0x49, 0x04, 0xfe, 0x92,
	0x4a, 0x95, 0xcc, 0xf8, 0x6a, 0x95, 0xa9, 0xe0, 0xa0, 0xa6, 0x7d, 0x8f, 0x60, 0x0c, 0x5a, 0x61,
	0xce, 0xe1, 0x6f, 0x17, 0x5a, 0xc6, 0x05, 0x19, 0x83, 0xb7, 0x66, 0x85, 0xcc, 0x78, 0x6e, 0x43,
	0xf4, 0xed, 0xb5, 0x1b, 0x83, 0xc6, 0x15, 0x4d, 0x86, 0xd0, 0x9e, 0x2d, 0x68, 0x96, 0x27, 0x59,
	0x8a, 0x11, 0x3a, 0xb1, 0x87, 0xf6, 0x55, 0x4a, 0xee, 0xe9, 0x34, 0xb3, 0xf9, 0x42, 0x05, 0x8d,
	0x13, 0x67, 0xdc, 0x88, 0xad, 0x45, 0x22, 0x70, 0x75, 0x69, 0x81, 0x8b, 0x9e, 0x47, 0x91, 0xa9,
	0x3b, 0xaa, 0xea, 0x8e, 0xae, 0xab, 0xba, 0x63, 0xd4, 0x91, 0xfb, 0xe0, 0xe5, 0xe5, 0x2a, 0x51,
	0x1b, 0x19, 0x34, 0x8d, 0xa3, 0xbc, 0x5c, 0x5d, 0x6f, 0x24, 0x79, 0x00, 0x1d, 0xc5, 0x15, 0x5d,
	0x22, 0xd5, 0x42, 0xaa, 0x8d, 0x80, 0x26, 0x27, 0xd0, 0xc3, 0xea, 0x31, 0x6f, 0x9d, 0x9d, 0x57,
	0x2b, 0x04, 0x3b, 0x79, 0xf5, 0x21, 0xc6, 0x16, 0x19, 0x23, 0x25, 0x63, 0x18, 0xec, 0x75, 0x2c,
	0x59, 0x50, 0xb9, 0x08, 0xda, 0x58, 0x54, 0x7f, 0xd7, 0xa7, 0x4b, 0x2a, 0x17, 0x3a, 0x74, 0x4a,
	0x15, 0x35, 0x92, 0x0e, 0x4a, 0xda, 0x1a, 0x40, 0xf2, 0x19, 0x1c, 0xae, 0xe9, 0x32, 0x4b, 0xa9,
	0xe2, 0x85, 0x34, 0x12, 0x30, 0x5e, 0x76, 0x30, 0x0a, 0x5f, 0xc1, 0x71, 0xce, 0x36, 0x2a, 0xf9,
	0x5b, 0xed, 0xa3, 0x9a, 0x68, 0xee, 0xa6, 0x7e, 0xe3, 0x14, 0xfa, 0x33, 0x9e, 0x4b, 0x96, 0xcb,
	0xd2, 0x6a, 0xbb, 0xa8, 0xed, 0x6d, 0x51, 0x94, 0x0d, 0xa1, 0x4d, 0x85, 0x30, 0x82, 0x9e, 0x99,
	0x0a, 0x15, 0x02, 0xa9, 0xe7, 0x70, 0x84, 0x35, 0x16, 0x4c, 0x96, 0x4b, 0x65, 0x9d, 0xf4, 0x51,
	0x73, 0xa8, 0x89, 0xd8, 0xe0, 0xa8, 0x7d, 0x0a, 0x3d, 0xb6, 0xce, 0x52, 0x96, 0xcf, 0x98, 0xd1,
	0x1d, 0xa2, 0xae, 0x5b, 0x81, 0x28, 0x3a, 0x83, 0x81, 0x28, 0xb8, 0xe0, 0x92, 0x15, 0x09, 0x4d,
	0xd3, 0x82, 0x49, 0x19, 0x0c, 0x8c, 0xbf, 0x0a, 0x7f, 0x67, 0xe0, 0xf0, 0x35, 0x78, 0x76, 0x81,
	0xc8, 0x31, 0x98, 0xb5, 0xc7, 0xfd, 0x72, 0x63, 0x63, 0x90, 0x01, 0x34, 0xa8, 0x10, 0xb8, 0x48,
	0x6e, 0xac, 0x8f, 0xe1, 0x23, 0xf0, 0xec, 0xa8, 0x08, 0x01, 0x17, 0x93, 0x70, 0xd0, 0x39, 0x9e,
	0xc3, 0x5f, 0x0e, 0xb4, 0xcc, 0x58, 0xc8, 0x19, 0xb4, 0xb7, 0xb3, 0x76, 0xee, 0x9c, 0xb5, 0x37,
	0xb5, 0x73, 0xde, 0x6d, 0xe6, 0x41, 0x6d, 0x33, 0x8f, 0xa1, 0x59, 0xf0, 0x32, 0x4f, 0xed, 0xc2,
	0x1a, 0x63, 0x1b, 0xd7, 0xdd, 0xc5, 0x25, 0x4f, 0xa0, 0xb9, 0xe6, 0x8a, 0xe9, 0x8d, 0x6c, 0x8c,
	0xfd, 0x89, 0x5f, 0x7d, 0x1e, 0x5c, 0xb1, 0xd8, 0x30, 0xe1, 0x4f, 0x07, 0x5c, 0x6d, 0xeb, 0xfb,
	0xea, 0x56, 0xb0, 0x2a, 0x6f, 0x7d, 0x26, 0x2f, 0xe0, 0x68, 0x3b, 0xf4, 0x6d, 0xd7, 0xcc, 0xf7,
	0x33, 0xd8, 0x12, 0xb6, 0x6d, 0xb5, 0x7d, 0x4a, 0xb2, 0x3c, 0x65, 0x1b, 0x9b, 0xe0, 0x6e, 0x9f,
	0xae, 0x34, 0x4a, 0x1e, 0x42, 0x47, 0x66, 0xf3, 0x9c, 0xaa, 0xb2, 0x60, 0x36, 0xdd, 0x1d, 0x10,
	0xbe, 0x04, 0xf2, 0x89, 0xa9, 0x8b, 0xdb, 0x4b, 0x2c, 0x36, 0x66, 0x3f, 0x4a, 0x26, 0xd5, 0x5e,
	0x2f, 0x9c, 0xfd, 0x5e, 0x84, 0x6f, 0xe1, 0xff, 0x9a, 0x5a, 0x0a, 0xbd, 0x61, 0x24, 0xdc, 0x9f,
	0x9b, 0x3f, 0xe9, 0xee, 0xb7, 0xd8, 0x4e, 0x71, 0x72, 0x03, 0x5d, 0xb4, 0x3f, 0xb3, 0x62, 0x9d,
	0xcd, 0x18, 0xf9, 0x08, 0xfe, 0x9e, 0x2b, 0x32, 0xb4, 0x77, 0xfe, 0x4d, 0x66, 0x34, 0xba, 0x8b,
	0x32, 0x91, 0xc3, 0xff, 0x2e, 0x3a, 0x5f, 0x3c, 0xfb, 0x7e, 0x4e, 0x5b, 0xf8, 0x5a, 0xbc, 0xf9,
	0x13, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x5d, 0x39, 0x59, 0x57, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlockServiceClient is the client API for BlockService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockServiceClient interface {
	GetByHeight(ctx context.Context, in *GetByHeightRequest, opts ...grpc.CallOption) (*GetByHeightResponse, error)
}

type blockServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlockServiceClient(cc grpc.ClientConnInterface) BlockServiceClient {
	return &blockServiceClient{cc}
}

func (c *blockServiceClient) GetByHeight(ctx context.Context, in *GetByHeightRequest, opts ...grpc.CallOption) (*GetByHeightResponse, error) {
	out := new(GetByHeightResponse)
	err := c.cc.Invoke(ctx, "/block.BlockService/GetByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockServiceServer is the server API for BlockService service.
type BlockServiceServer interface {
	GetByHeight(context.Context, *GetByHeightRequest) (*GetByHeightResponse, error)
}

// UnimplementedBlockServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlockServiceServer struct {
}

func (*UnimplementedBlockServiceServer) GetByHeight(ctx context.Context, req *GetByHeightRequest) (*GetByHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByHeight not implemented")
}

func RegisterBlockServiceServer(s *grpc.Server, srv BlockServiceServer) {
	s.RegisterService(&_BlockService_serviceDesc, srv)
}

func _BlockService_GetByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServiceServer).GetByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/block.BlockService/GetByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServiceServer).GetByHeight(ctx, req.(*GetByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "block.BlockService",
	HandlerType: (*BlockServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByHeight",
			Handler:    _BlockService_GetByHeight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "block/blockpb/block.proto",
}
