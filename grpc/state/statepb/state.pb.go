// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/state/statepb/state.proto

package statepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegistryParameters struct {
	// DebugAllowUnroutableAddresses is true iff node registration should
	// allow unroutable addreses.
	DebugAllowUnroutableAddresses bool `protobuf:"varint,1,opt,name=debug_allow_unroutable_addresses,json=debugAllowUnroutableAddresses,proto3" json:"debug_allow_unroutable_addresses,omitempty"`
	// DebugAllowTestRuntimes is true iff test runtimes should be allowed to
	// be registered.
	DebugAllowTestRuntimes bool `protobuf:"varint,2,opt,name=DebugAllowTestRuntimes,proto3" json:"DebugAllowTestRuntimes,omitempty"`
	// DebugAllowEntitySignedNodeRegistration is true iff node registration
	// signed by entity signing keys should be allowed.
	DebugAllowEntitySignedNodeRegistration bool `protobuf:"varint,3,opt,name=DebugAllowEntitySignedNodeRegistration,proto3" json:"DebugAllowEntitySignedNodeRegistration,omitempty"`
	// DebugBypassStake is true iff the registry should bypass all of the staking
	// related checks and operations.
	DebugBypassStake bool `protobuf:"varint,4,opt,name=DebugBypassStake,proto3" json:"DebugBypassStake,omitempty"`
	// DisableRuntimeRegistration is true iff runtime registration should be
	// disabled outside of the genesis block.
	DisableRuntimeRegistration bool `protobuf:"varint,5,opt,name=DisableRuntimeRegistration,proto3" json:"DisableRuntimeRegistration,omitempty"`
	// DisableRuntimeRegistration is true iff key manager runtime registration should be
	// disabled outside of the genesis block.
	DisableKeyManagerRuntimeRegistration bool `protobuf:"varint,6,opt,name=DisableKeyManagerRuntimeRegistration,proto3" json:"DisableKeyManagerRuntimeRegistration,omitempty"`
	// GasCosts are the registry transaction gas costs.
	GasCosts map[string]uint64 `protobuf:"bytes,7,rep,name=GasCosts,proto3" json:"GasCosts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// MaxNodeExpiration is the maximum number of epochs relative to the epoch
	// at registration time that a single node registration is valid for.
	MaxNodeExpiration    uint64   `protobuf:"varint,8,opt,name=MaxNodeExpiration,proto3" json:"MaxNodeExpiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegistryParameters) Reset()         { *m = RegistryParameters{} }
func (m *RegistryParameters) String() string { return proto.CompactTextString(m) }
func (*RegistryParameters) ProtoMessage()    {}
func (*RegistryParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{0}
}

func (m *RegistryParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistryParameters.Unmarshal(m, b)
}
func (m *RegistryParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistryParameters.Marshal(b, m, deterministic)
}
func (m *RegistryParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistryParameters.Merge(m, src)
}
func (m *RegistryParameters) XXX_Size() int {
	return xxx_messageInfo_RegistryParameters.Size(m)
}
func (m *RegistryParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistryParameters.DiscardUnknown(m)
}

var xxx_messageInfo_RegistryParameters proto.InternalMessageInfo

func (m *RegistryParameters) GetDebugAllowUnroutableAddresses() bool {
	if m != nil {
		return m.DebugAllowUnroutableAddresses
	}
	return false
}

func (m *RegistryParameters) GetDebugAllowTestRuntimes() bool {
	if m != nil {
		return m.DebugAllowTestRuntimes
	}
	return false
}

func (m *RegistryParameters) GetDebugAllowEntitySignedNodeRegistration() bool {
	if m != nil {
		return m.DebugAllowEntitySignedNodeRegistration
	}
	return false
}

func (m *RegistryParameters) GetDebugBypassStake() bool {
	if m != nil {
		return m.DebugBypassStake
	}
	return false
}

func (m *RegistryParameters) GetDisableRuntimeRegistration() bool {
	if m != nil {
		return m.DisableRuntimeRegistration
	}
	return false
}

func (m *RegistryParameters) GetDisableKeyManagerRuntimeRegistration() bool {
	if m != nil {
		return m.DisableKeyManagerRuntimeRegistration
	}
	return false
}

func (m *RegistryParameters) GetGasCosts() map[string]uint64 {
	if m != nil {
		return m.GasCosts
	}
	return nil
}

func (m *RegistryParameters) GetMaxNodeExpiration() uint64 {
	if m != nil {
		return m.MaxNodeExpiration
	}
	return 0
}

type Entity struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{1}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type Registry struct {
	// Parameters are the registry consensus parameters.
	Parameters *RegistryParameters `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	// Entities is the initial list of entities.
	Entities             []*Entity `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Registry) Reset()         { *m = Registry{} }
func (m *Registry) String() string { return proto.CompactTextString(m) }
func (*Registry) ProtoMessage()    {}
func (*Registry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{2}
}

func (m *Registry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Registry.Unmarshal(m, b)
}
func (m *Registry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Registry.Marshal(b, m, deterministic)
}
func (m *Registry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Registry.Merge(m, src)
}
func (m *Registry) XXX_Size() int {
	return xxx_messageInfo_Registry.Size(m)
}
func (m *Registry) XXX_DiscardUnknown() {
	xxx_messageInfo_Registry.DiscardUnknown(m)
}

var xxx_messageInfo_Registry proto.InternalMessageInfo

func (m *Registry) GetParameters() *RegistryParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Registry) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type Slash struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	FreezeInterval       uint64   `protobuf:"varint,2,opt,name=FreezeInterval,proto3" json:"FreezeInterval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Slash) Reset()         { *m = Slash{} }
func (m *Slash) String() string { return proto.CompactTextString(m) }
func (*Slash) ProtoMessage()    {}
func (*Slash) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{3}
}

func (m *Slash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Slash.Unmarshal(m, b)
}
func (m *Slash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Slash.Marshal(b, m, deterministic)
}
func (m *Slash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Slash.Merge(m, src)
}
func (m *Slash) XXX_Size() int {
	return xxx_messageInfo_Slash.Size(m)
}
func (m *Slash) XXX_DiscardUnknown() {
	xxx_messageInfo_Slash.DiscardUnknown(m)
}

var xxx_messageInfo_Slash proto.InternalMessageInfo

func (m *Slash) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Slash) GetFreezeInterval() uint64 {
	if m != nil {
		return m.FreezeInterval
	}
	return 0
}

type RewardStep struct {
	Until                uint64   `protobuf:"varint,1,opt,name=Until,proto3" json:"Until,omitempty"`
	Scale                []byte   `protobuf:"bytes,2,opt,name=Scale,proto3" json:"Scale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RewardStep) Reset()         { *m = RewardStep{} }
func (m *RewardStep) String() string { return proto.CompactTextString(m) }
func (*RewardStep) ProtoMessage()    {}
func (*RewardStep) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{4}
}

func (m *RewardStep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardStep.Unmarshal(m, b)
}
func (m *RewardStep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardStep.Marshal(b, m, deterministic)
}
func (m *RewardStep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardStep.Merge(m, src)
}
func (m *RewardStep) XXX_Size() int {
	return xxx_messageInfo_RewardStep.Size(m)
}
func (m *RewardStep) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardStep.DiscardUnknown(m)
}

var xxx_messageInfo_RewardStep proto.InternalMessageInfo

func (m *RewardStep) GetUntil() uint64 {
	if m != nil {
		return m.Until
	}
	return 0
}

func (m *RewardStep) GetScale() []byte {
	if m != nil {
		return m.Scale
	}
	return nil
}

type CommissionScheduleRules struct {
	RateChangeInterval   uint64   `protobuf:"varint,1,opt,name=RateChangeInterval,proto3" json:"RateChangeInterval,omitempty"`
	RateBoundLead        uint64   `protobuf:"varint,2,opt,name=RateBoundLead,proto3" json:"RateBoundLead,omitempty"`
	MaxRateSteps         int64    `protobuf:"varint,3,opt,name=MaxRateSteps,proto3" json:"MaxRateSteps,omitempty"`
	MaxBoundSteps        int64    `protobuf:"varint,4,opt,name=MaxBoundSteps,proto3" json:"MaxBoundSteps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommissionScheduleRules) Reset()         { *m = CommissionScheduleRules{} }
func (m *CommissionScheduleRules) String() string { return proto.CompactTextString(m) }
func (*CommissionScheduleRules) ProtoMessage()    {}
func (*CommissionScheduleRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{5}
}

func (m *CommissionScheduleRules) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommissionScheduleRules.Unmarshal(m, b)
}
func (m *CommissionScheduleRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommissionScheduleRules.Marshal(b, m, deterministic)
}
func (m *CommissionScheduleRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommissionScheduleRules.Merge(m, src)
}
func (m *CommissionScheduleRules) XXX_Size() int {
	return xxx_messageInfo_CommissionScheduleRules.Size(m)
}
func (m *CommissionScheduleRules) XXX_DiscardUnknown() {
	xxx_messageInfo_CommissionScheduleRules.DiscardUnknown(m)
}

var xxx_messageInfo_CommissionScheduleRules proto.InternalMessageInfo

func (m *CommissionScheduleRules) GetRateChangeInterval() uint64 {
	if m != nil {
		return m.RateChangeInterval
	}
	return 0
}

func (m *CommissionScheduleRules) GetRateBoundLead() uint64 {
	if m != nil {
		return m.RateBoundLead
	}
	return 0
}

func (m *CommissionScheduleRules) GetMaxRateSteps() int64 {
	if m != nil {
		return m.MaxRateSteps
	}
	return 0
}

func (m *CommissionScheduleRules) GetMaxBoundSteps() int64 {
	if m != nil {
		return m.MaxBoundSteps
	}
	return 0
}

type StakingParameters struct {
	Thresholds                        map[int64][]byte         `protobuf:"bytes,1,rep,name=Thresholds,proto3" json:"Thresholds,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DebondingInterval                 uint64                   `protobuf:"varint,2,opt,name=DebondingInterval,proto3" json:"DebondingInterval,omitempty"`
	RewardSchedule                    []*RewardStep            `protobuf:"bytes,3,rep,name=RewardSchedule,proto3" json:"RewardSchedule,omitempty"`
	SigningRewardThresholdNumerator   uint64                   `protobuf:"varint,4,opt,name=SigningRewardThresholdNumerator,proto3" json:"SigningRewardThresholdNumerator,omitempty"`
	SigningRewardThresholdDenominator uint64                   `protobuf:"varint,5,opt,name=SigningRewardThresholdDenominator,proto3" json:"SigningRewardThresholdDenominator,omitempty"`
	CommissionScheduleRules           *CommissionScheduleRules `protobuf:"bytes,6,opt,name=CommissionScheduleRules,proto3" json:"CommissionScheduleRules,omitempty"`
	Slashing                          map[string]*Slash        `protobuf:"bytes,7,rep,name=Slashing,proto3" json:"Slashing,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GasCosts                          map[string]uint64        `protobuf:"bytes,8,rep,name=GasCosts,proto3" json:"GasCosts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MinDelegationAmount               []byte                   `protobuf:"bytes,9,opt,name=MinDelegationAmount,proto3" json:"MinDelegationAmount,omitempty"`
	DisableTransfers                  bool                     `protobuf:"varint,10,opt,name=DisableTransfers,proto3" json:"DisableTransfers,omitempty"`
	DisableDelegation                 bool                     `protobuf:"varint,11,opt,name=DisableDelegation,proto3" json:"DisableDelegation,omitempty"`
	UndisableTransfersFrom            map[string]bool          `protobuf:"bytes,12,rep,name=UndisableTransfersFrom,proto3" json:"UndisableTransfersFrom,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// FeeSplitVote is the proportion of block fee portions that go to the validator that signs.
	FeeSplitVote []byte `protobuf:"bytes,13,opt,name=FeeSplitVote,proto3" json:"FeeSplitVote,omitempty"`
	// FeeSplitPropose is the proportion of block fee portions that go to the proposer.
	FeeSplitPropose []byte `protobuf:"bytes,14,opt,name=FeeSplitPropose,proto3" json:"FeeSplitPropose,omitempty"`
	// RewardFactorEpochSigned is the factor for a reward distributed per epoch to
	// entities that have signed at least a threshold fraction of the blocks.
	RewardFactorEpochSigned []byte `protobuf:"bytes,15,opt,name=RewardFactorEpochSigned,proto3" json:"RewardFactorEpochSigned,omitempty"`
	// RewardFactorBlockProposed is the factor for a reward distributed per block
	// to the entity that proposed the block.
	RewardFactorBlockProposed []byte   `protobuf:"bytes,16,opt,name=RewardFactorBlockProposed,proto3" json:"RewardFactorBlockProposed,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *StakingParameters) Reset()         { *m = StakingParameters{} }
func (m *StakingParameters) String() string { return proto.CompactTextString(m) }
func (*StakingParameters) ProtoMessage()    {}
func (*StakingParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{6}
}

func (m *StakingParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakingParameters.Unmarshal(m, b)
}
func (m *StakingParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakingParameters.Marshal(b, m, deterministic)
}
func (m *StakingParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakingParameters.Merge(m, src)
}
func (m *StakingParameters) XXX_Size() int {
	return xxx_messageInfo_StakingParameters.Size(m)
}
func (m *StakingParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_StakingParameters.DiscardUnknown(m)
}

var xxx_messageInfo_StakingParameters proto.InternalMessageInfo

func (m *StakingParameters) GetThresholds() map[int64][]byte {
	if m != nil {
		return m.Thresholds
	}
	return nil
}

func (m *StakingParameters) GetDebondingInterval() uint64 {
	if m != nil {
		return m.DebondingInterval
	}
	return 0
}

func (m *StakingParameters) GetRewardSchedule() []*RewardStep {
	if m != nil {
		return m.RewardSchedule
	}
	return nil
}

func (m *StakingParameters) GetSigningRewardThresholdNumerator() uint64 {
	if m != nil {
		return m.SigningRewardThresholdNumerator
	}
	return 0
}

func (m *StakingParameters) GetSigningRewardThresholdDenominator() uint64 {
	if m != nil {
		return m.SigningRewardThresholdDenominator
	}
	return 0
}

func (m *StakingParameters) GetCommissionScheduleRules() *CommissionScheduleRules {
	if m != nil {
		return m.CommissionScheduleRules
	}
	return nil
}

func (m *StakingParameters) GetSlashing() map[string]*Slash {
	if m != nil {
		return m.Slashing
	}
	return nil
}

func (m *StakingParameters) GetGasCosts() map[string]uint64 {
	if m != nil {
		return m.GasCosts
	}
	return nil
}

func (m *StakingParameters) GetMinDelegationAmount() []byte {
	if m != nil {
		return m.MinDelegationAmount
	}
	return nil
}

func (m *StakingParameters) GetDisableTransfers() bool {
	if m != nil {
		return m.DisableTransfers
	}
	return false
}

func (m *StakingParameters) GetDisableDelegation() bool {
	if m != nil {
		return m.DisableDelegation
	}
	return false
}

func (m *StakingParameters) GetUndisableTransfersFrom() map[string]bool {
	if m != nil {
		return m.UndisableTransfersFrom
	}
	return nil
}

func (m *StakingParameters) GetFeeSplitVote() []byte {
	if m != nil {
		return m.FeeSplitVote
	}
	return nil
}

func (m *StakingParameters) GetFeeSplitPropose() []byte {
	if m != nil {
		return m.FeeSplitPropose
	}
	return nil
}

func (m *StakingParameters) GetRewardFactorEpochSigned() []byte {
	if m != nil {
		return m.RewardFactorEpochSigned
	}
	return nil
}

func (m *StakingParameters) GetRewardFactorBlockProposed() []byte {
	if m != nil {
		return m.RewardFactorBlockProposed
	}
	return nil
}

type Staking struct {
	TotalSupply          []byte                               `protobuf:"bytes,1,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	CommonPool           []byte                               `protobuf:"bytes,2,opt,name=common_pool,json=commonPool,proto3" json:"common_pool,omitempty"`
	Parameters           *StakingParameters                   `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Ledger               map[string]*Account                  `protobuf:"bytes,4,rep,name=ledger,proto3" json:"ledger,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Delegations          map[string]*DelegationEntry          `protobuf:"bytes,5,rep,name=delegations,proto3" json:"delegations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DebondingDelegations map[string]*DebondingDelegationEntry `protobuf:"bytes,6,rep,name=debonding_delegations,json=debondingDelegations,proto3" json:"debonding_delegations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Staking) Reset()         { *m = Staking{} }
func (m *Staking) String() string { return proto.CompactTextString(m) }
func (*Staking) ProtoMessage()    {}
func (*Staking) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{7}
}

func (m *Staking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Staking.Unmarshal(m, b)
}
func (m *Staking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Staking.Marshal(b, m, deterministic)
}
func (m *Staking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Staking.Merge(m, src)
}
func (m *Staking) XXX_Size() int {
	return xxx_messageInfo_Staking.Size(m)
}
func (m *Staking) XXX_DiscardUnknown() {
	xxx_messageInfo_Staking.DiscardUnknown(m)
}

var xxx_messageInfo_Staking proto.InternalMessageInfo

func (m *Staking) GetTotalSupply() []byte {
	if m != nil {
		return m.TotalSupply
	}
	return nil
}

func (m *Staking) GetCommonPool() []byte {
	if m != nil {
		return m.CommonPool
	}
	return nil
}

func (m *Staking) GetParameters() *StakingParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Staking) GetLedger() map[string]*Account {
	if m != nil {
		return m.Ledger
	}
	return nil
}

func (m *Staking) GetDelegations() map[string]*DelegationEntry {
	if m != nil {
		return m.Delegations
	}
	return nil
}

func (m *Staking) GetDebondingDelegations() map[string]*DebondingDelegationEntry {
	if m != nil {
		return m.DebondingDelegations
	}
	return nil
}

type Delegation struct {
	Shares               []byte   `protobuf:"bytes,1,opt,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Delegation) Reset()         { *m = Delegation{} }
func (m *Delegation) String() string { return proto.CompactTextString(m) }
func (*Delegation) ProtoMessage()    {}
func (*Delegation) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{8}
}

func (m *Delegation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Delegation.Unmarshal(m, b)
}
func (m *Delegation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Delegation.Marshal(b, m, deterministic)
}
func (m *Delegation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delegation.Merge(m, src)
}
func (m *Delegation) XXX_Size() int {
	return xxx_messageInfo_Delegation.Size(m)
}
func (m *Delegation) XXX_DiscardUnknown() {
	xxx_messageInfo_Delegation.DiscardUnknown(m)
}

var xxx_messageInfo_Delegation proto.InternalMessageInfo

func (m *Delegation) GetShares() []byte {
	if m != nil {
		return m.Shares
	}
	return nil
}

type DebondingDelegation struct {
	Shares               []byte   `protobuf:"bytes,1,opt,name=shares,proto3" json:"shares,omitempty"`
	DebondEndTime        uint64   `protobuf:"varint,2,opt,name=DebondEndTime,proto3" json:"DebondEndTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebondingDelegation) Reset()         { *m = DebondingDelegation{} }
func (m *DebondingDelegation) String() string { return proto.CompactTextString(m) }
func (*DebondingDelegation) ProtoMessage()    {}
func (*DebondingDelegation) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{9}
}

func (m *DebondingDelegation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebondingDelegation.Unmarshal(m, b)
}
func (m *DebondingDelegation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebondingDelegation.Marshal(b, m, deterministic)
}
func (m *DebondingDelegation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebondingDelegation.Merge(m, src)
}
func (m *DebondingDelegation) XXX_Size() int {
	return xxx_messageInfo_DebondingDelegation.Size(m)
}
func (m *DebondingDelegation) XXX_DiscardUnknown() {
	xxx_messageInfo_DebondingDelegation.DiscardUnknown(m)
}

var xxx_messageInfo_DebondingDelegation proto.InternalMessageInfo

func (m *DebondingDelegation) GetShares() []byte {
	if m != nil {
		return m.Shares
	}
	return nil
}

func (m *DebondingDelegation) GetDebondEndTime() uint64 {
	if m != nil {
		return m.DebondEndTime
	}
	return 0
}

type DelegationEntry struct {
	Entries              map[string]*Delegation `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DelegationEntry) Reset()         { *m = DelegationEntry{} }
func (m *DelegationEntry) String() string { return proto.CompactTextString(m) }
func (*DelegationEntry) ProtoMessage()    {}
func (*DelegationEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{10}
}

func (m *DelegationEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegationEntry.Unmarshal(m, b)
}
func (m *DelegationEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegationEntry.Marshal(b, m, deterministic)
}
func (m *DelegationEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationEntry.Merge(m, src)
}
func (m *DelegationEntry) XXX_Size() int {
	return xxx_messageInfo_DelegationEntry.Size(m)
}
func (m *DelegationEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationEntry proto.InternalMessageInfo

func (m *DelegationEntry) GetEntries() map[string]*Delegation {
	if m != nil {
		return m.Entries
	}
	return nil
}

type DebondingDelegationInnerEntry struct {
	DebondingDelegations []*DebondingDelegation `protobuf:"bytes,1,rep,name=debondingDelegations,proto3" json:"debondingDelegations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DebondingDelegationInnerEntry) Reset()         { *m = DebondingDelegationInnerEntry{} }
func (m *DebondingDelegationInnerEntry) String() string { return proto.CompactTextString(m) }
func (*DebondingDelegationInnerEntry) ProtoMessage()    {}
func (*DebondingDelegationInnerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{11}
}

func (m *DebondingDelegationInnerEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebondingDelegationInnerEntry.Unmarshal(m, b)
}
func (m *DebondingDelegationInnerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebondingDelegationInnerEntry.Marshal(b, m, deterministic)
}
func (m *DebondingDelegationInnerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebondingDelegationInnerEntry.Merge(m, src)
}
func (m *DebondingDelegationInnerEntry) XXX_Size() int {
	return xxx_messageInfo_DebondingDelegationInnerEntry.Size(m)
}
func (m *DebondingDelegationInnerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DebondingDelegationInnerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DebondingDelegationInnerEntry proto.InternalMessageInfo

func (m *DebondingDelegationInnerEntry) GetDebondingDelegations() []*DebondingDelegation {
	if m != nil {
		return m.DebondingDelegations
	}
	return nil
}

type DebondingDelegationEntry struct {
	Entries              map[string]*DebondingDelegationInnerEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *DebondingDelegationEntry) Reset()         { *m = DebondingDelegationEntry{} }
func (m *DebondingDelegationEntry) String() string { return proto.CompactTextString(m) }
func (*DebondingDelegationEntry) ProtoMessage()    {}
func (*DebondingDelegationEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{12}
}

func (m *DebondingDelegationEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebondingDelegationEntry.Unmarshal(m, b)
}
func (m *DebondingDelegationEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebondingDelegationEntry.Marshal(b, m, deterministic)
}
func (m *DebondingDelegationEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebondingDelegationEntry.Merge(m, src)
}
func (m *DebondingDelegationEntry) XXX_Size() int {
	return xxx_messageInfo_DebondingDelegationEntry.Size(m)
}
func (m *DebondingDelegationEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_DebondingDelegationEntry.DiscardUnknown(m)
}

var xxx_messageInfo_DebondingDelegationEntry proto.InternalMessageInfo

func (m *DebondingDelegationEntry) GetEntries() map[string]*DebondingDelegationInnerEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type GeneralAccount struct {
	Balance              []byte   `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	Nonce                uint64   `protobuf:"varint,2,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	TransfersNotBefore   uint64   `protobuf:"varint,3,opt,name=TransfersNotBefore,proto3" json:"TransfersNotBefore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralAccount) Reset()         { *m = GeneralAccount{} }
func (m *GeneralAccount) String() string { return proto.CompactTextString(m) }
func (*GeneralAccount) ProtoMessage()    {}
func (*GeneralAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{13}
}

func (m *GeneralAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralAccount.Unmarshal(m, b)
}
func (m *GeneralAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralAccount.Marshal(b, m, deterministic)
}
func (m *GeneralAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralAccount.Merge(m, src)
}
func (m *GeneralAccount) XXX_Size() int {
	return xxx_messageInfo_GeneralAccount.Size(m)
}
func (m *GeneralAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralAccount.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralAccount proto.InternalMessageInfo

func (m *GeneralAccount) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *GeneralAccount) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *GeneralAccount) GetTransfersNotBefore() uint64 {
	if m != nil {
		return m.TransfersNotBefore
	}
	return 0
}

type SharePool struct {
	Balance              []byte   `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	TotalShares          []byte   `protobuf:"bytes,2,opt,name=TotalShares,proto3" json:"TotalShares,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SharePool) Reset()         { *m = SharePool{} }
func (m *SharePool) String() string { return proto.CompactTextString(m) }
func (*SharePool) ProtoMessage()    {}
func (*SharePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{14}
}

func (m *SharePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharePool.Unmarshal(m, b)
}
func (m *SharePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharePool.Marshal(b, m, deterministic)
}
func (m *SharePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharePool.Merge(m, src)
}
func (m *SharePool) XXX_Size() int {
	return xxx_messageInfo_SharePool.Size(m)
}
func (m *SharePool) XXX_DiscardUnknown() {
	xxx_messageInfo_SharePool.DiscardUnknown(m)
}

var xxx_messageInfo_SharePool proto.InternalMessageInfo

func (m *SharePool) GetBalance() []byte {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *SharePool) GetTotalShares() []byte {
	if m != nil {
		return m.TotalShares
	}
	return nil
}

type CommissionRateStep struct {
	Start                uint64   `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	Rate                 []byte   `protobuf:"bytes,2,opt,name=Rate,proto3" json:"Rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommissionRateStep) Reset()         { *m = CommissionRateStep{} }
func (m *CommissionRateStep) String() string { return proto.CompactTextString(m) }
func (*CommissionRateStep) ProtoMessage()    {}
func (*CommissionRateStep) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{15}
}

func (m *CommissionRateStep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommissionRateStep.Unmarshal(m, b)
}
func (m *CommissionRateStep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommissionRateStep.Marshal(b, m, deterministic)
}
func (m *CommissionRateStep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommissionRateStep.Merge(m, src)
}
func (m *CommissionRateStep) XXX_Size() int {
	return xxx_messageInfo_CommissionRateStep.Size(m)
}
func (m *CommissionRateStep) XXX_DiscardUnknown() {
	xxx_messageInfo_CommissionRateStep.DiscardUnknown(m)
}

var xxx_messageInfo_CommissionRateStep proto.InternalMessageInfo

func (m *CommissionRateStep) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *CommissionRateStep) GetRate() []byte {
	if m != nil {
		return m.Rate
	}
	return nil
}

type CommissionRateBoundStep struct {
	Start                uint64   `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	RateMin              []byte   `protobuf:"bytes,2,opt,name=RateMin,proto3" json:"RateMin,omitempty"`
	RateMax              []byte   `protobuf:"bytes,3,opt,name=RateMax,proto3" json:"RateMax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommissionRateBoundStep) Reset()         { *m = CommissionRateBoundStep{} }
func (m *CommissionRateBoundStep) String() string { return proto.CompactTextString(m) }
func (*CommissionRateBoundStep) ProtoMessage()    {}
func (*CommissionRateBoundStep) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{16}
}

func (m *CommissionRateBoundStep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommissionRateBoundStep.Unmarshal(m, b)
}
func (m *CommissionRateBoundStep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommissionRateBoundStep.Marshal(b, m, deterministic)
}
func (m *CommissionRateBoundStep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommissionRateBoundStep.Merge(m, src)
}
func (m *CommissionRateBoundStep) XXX_Size() int {
	return xxx_messageInfo_CommissionRateBoundStep.Size(m)
}
func (m *CommissionRateBoundStep) XXX_DiscardUnknown() {
	xxx_messageInfo_CommissionRateBoundStep.DiscardUnknown(m)
}

var xxx_messageInfo_CommissionRateBoundStep proto.InternalMessageInfo

func (m *CommissionRateBoundStep) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *CommissionRateBoundStep) GetRateMin() []byte {
	if m != nil {
		return m.RateMin
	}
	return nil
}

func (m *CommissionRateBoundStep) GetRateMax() []byte {
	if m != nil {
		return m.RateMax
	}
	return nil
}

type CommissionSchedule struct {
	Rates                []*CommissionRateStep      `protobuf:"bytes,1,rep,name=Rates,proto3" json:"Rates,omitempty"`
	Bounds               []*CommissionRateBoundStep `protobuf:"bytes,2,rep,name=Bounds,proto3" json:"Bounds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CommissionSchedule) Reset()         { *m = CommissionSchedule{} }
func (m *CommissionSchedule) String() string { return proto.CompactTextString(m) }
func (*CommissionSchedule) ProtoMessage()    {}
func (*CommissionSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{17}
}

func (m *CommissionSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommissionSchedule.Unmarshal(m, b)
}
func (m *CommissionSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommissionSchedule.Marshal(b, m, deterministic)
}
func (m *CommissionSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommissionSchedule.Merge(m, src)
}
func (m *CommissionSchedule) XXX_Size() int {
	return xxx_messageInfo_CommissionSchedule.Size(m)
}
func (m *CommissionSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_CommissionSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_CommissionSchedule proto.InternalMessageInfo

func (m *CommissionSchedule) GetRates() []*CommissionRateStep {
	if m != nil {
		return m.Rates
	}
	return nil
}

func (m *CommissionSchedule) GetBounds() []*CommissionRateBoundStep {
	if m != nil {
		return m.Bounds
	}
	return nil
}

// ThresholdKind is the kind of staking threshold.
type ThresholdKinds struct {
	Kinds                []int32  `protobuf:"varint,1,rep,packed,name=Kinds,proto3" json:"Kinds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThresholdKinds) Reset()         { *m = ThresholdKinds{} }
func (m *ThresholdKinds) String() string { return proto.CompactTextString(m) }
func (*ThresholdKinds) ProtoMessage()    {}
func (*ThresholdKinds) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{18}
}

func (m *ThresholdKinds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThresholdKinds.Unmarshal(m, b)
}
func (m *ThresholdKinds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThresholdKinds.Marshal(b, m, deterministic)
}
func (m *ThresholdKinds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThresholdKinds.Merge(m, src)
}
func (m *ThresholdKinds) XXX_Size() int {
	return xxx_messageInfo_ThresholdKinds.Size(m)
}
func (m *ThresholdKinds) XXX_DiscardUnknown() {
	xxx_messageInfo_ThresholdKinds.DiscardUnknown(m)
}

var xxx_messageInfo_ThresholdKinds proto.InternalMessageInfo

func (m *ThresholdKinds) GetKinds() []int32 {
	if m != nil {
		return m.Kinds
	}
	return nil
}

type StakeAccumulator struct {
	// Claims are the stake claims that must be satisfied at any given point. Adding a new claim is
	// only possible if all of the existing claims plus the new claim is satisfied.
	Claims               map[string]*ThresholdKinds `protobuf:"bytes,1,rep,name=Claims,proto3" json:"Claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *StakeAccumulator) Reset()         { *m = StakeAccumulator{} }
func (m *StakeAccumulator) String() string { return proto.CompactTextString(m) }
func (*StakeAccumulator) ProtoMessage()    {}
func (*StakeAccumulator) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{19}
}

func (m *StakeAccumulator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakeAccumulator.Unmarshal(m, b)
}
func (m *StakeAccumulator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakeAccumulator.Marshal(b, m, deterministic)
}
func (m *StakeAccumulator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakeAccumulator.Merge(m, src)
}
func (m *StakeAccumulator) XXX_Size() int {
	return xxx_messageInfo_StakeAccumulator.Size(m)
}
func (m *StakeAccumulator) XXX_DiscardUnknown() {
	xxx_messageInfo_StakeAccumulator.DiscardUnknown(m)
}

var xxx_messageInfo_StakeAccumulator proto.InternalMessageInfo

func (m *StakeAccumulator) GetClaims() map[string]*ThresholdKinds {
	if m != nil {
		return m.Claims
	}
	return nil
}

type EscrowAccount struct {
	Active               *SharePool          `protobuf:"bytes,1,opt,name=Active,proto3" json:"Active,omitempty"`
	Debonding            *SharePool          `protobuf:"bytes,2,opt,name=Debonding,proto3" json:"Debonding,omitempty"`
	CommissionSchedule   *CommissionSchedule `protobuf:"bytes,3,opt,name=CommissionSchedule,proto3" json:"CommissionSchedule,omitempty"`
	StakeAccumulator     *StakeAccumulator   `protobuf:"bytes,4,opt,name=StakeAccumulator,proto3" json:"StakeAccumulator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EscrowAccount) Reset()         { *m = EscrowAccount{} }
func (m *EscrowAccount) String() string { return proto.CompactTextString(m) }
func (*EscrowAccount) ProtoMessage()    {}
func (*EscrowAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{20}
}

func (m *EscrowAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EscrowAccount.Unmarshal(m, b)
}
func (m *EscrowAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EscrowAccount.Marshal(b, m, deterministic)
}
func (m *EscrowAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EscrowAccount.Merge(m, src)
}
func (m *EscrowAccount) XXX_Size() int {
	return xxx_messageInfo_EscrowAccount.Size(m)
}
func (m *EscrowAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_EscrowAccount.DiscardUnknown(m)
}

var xxx_messageInfo_EscrowAccount proto.InternalMessageInfo

func (m *EscrowAccount) GetActive() *SharePool {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *EscrowAccount) GetDebonding() *SharePool {
	if m != nil {
		return m.Debonding
	}
	return nil
}

func (m *EscrowAccount) GetCommissionSchedule() *CommissionSchedule {
	if m != nil {
		return m.CommissionSchedule
	}
	return nil
}

func (m *EscrowAccount) GetStakeAccumulator() *StakeAccumulator {
	if m != nil {
		return m.StakeAccumulator
	}
	return nil
}

type Account struct {
	General              *GeneralAccount `protobuf:"bytes,1,opt,name=General,proto3" json:"General,omitempty"`
	Escrow               *EscrowAccount  `protobuf:"bytes,2,opt,name=Escrow,proto3" json:"Escrow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{21}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetGeneral() *GeneralAccount {
	if m != nil {
		return m.General
	}
	return nil
}

func (m *Account) GetEscrow() *EscrowAccount {
	if m != nil {
		return m.Escrow
	}
	return nil
}

type SchedulerParams struct {
	// MinValidators is the minimum number of validators that MUST be
	// present in elected validator sets.
	MinValidators int64 `protobuf:"varint,1,opt,name=MinValidators,proto3" json:"MinValidators,omitempty"`
	// MaxValidators is the maximum number of validators that MAY be
	// present in elected validator sets.
	MaxValidators int64 `protobuf:"varint,2,opt,name=MaxValidators,proto3" json:"MaxValidators,omitempty"`
	// MaxValidatorsPerEntity is the maximum number of validators that
	// may be elected per entity in a single validator set.
	MaxValidatorsPerEntity int64 `protobuf:"varint,3,opt,name=MaxValidatorsPerEntity,proto3" json:"MaxValidatorsPerEntity,omitempty"`
	// DebugBypassStake is true iff the scheduler should bypass all of
	// the staking related checks and operations.
	DebugBypassStake bool `protobuf:"varint,4,opt,name=DebugBypassStake,proto3" json:"DebugBypassStake,omitempty"`
	// DebugStaticValidators is true iff the scheduler should use
	// a static validator set instead of electing anything.
	DebugStaticValidators bool `protobuf:"varint,5,opt,name=DebugStaticValidators,proto3" json:"DebugStaticValidators,omitempty"`
	// RewardFactorEpochElectionAny is the factor for a reward
	// distributed per epoch to entities that have any node considered
	// in any election.
	RewardFactorEpochElectionAny []byte   `protobuf:"bytes,6,opt,name=RewardFactorEpochElectionAny,proto3" json:"RewardFactorEpochElectionAny,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *SchedulerParams) Reset()         { *m = SchedulerParams{} }
func (m *SchedulerParams) String() string { return proto.CompactTextString(m) }
func (*SchedulerParams) ProtoMessage()    {}
func (*SchedulerParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{22}
}

func (m *SchedulerParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulerParams.Unmarshal(m, b)
}
func (m *SchedulerParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulerParams.Marshal(b, m, deterministic)
}
func (m *SchedulerParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulerParams.Merge(m, src)
}
func (m *SchedulerParams) XXX_Size() int {
	return xxx_messageInfo_SchedulerParams.Size(m)
}
func (m *SchedulerParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulerParams.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulerParams proto.InternalMessageInfo

func (m *SchedulerParams) GetMinValidators() int64 {
	if m != nil {
		return m.MinValidators
	}
	return 0
}

func (m *SchedulerParams) GetMaxValidators() int64 {
	if m != nil {
		return m.MaxValidators
	}
	return 0
}

func (m *SchedulerParams) GetMaxValidatorsPerEntity() int64 {
	if m != nil {
		return m.MaxValidatorsPerEntity
	}
	return 0
}

func (m *SchedulerParams) GetDebugBypassStake() bool {
	if m != nil {
		return m.DebugBypassStake
	}
	return false
}

func (m *SchedulerParams) GetDebugStaticValidators() bool {
	if m != nil {
		return m.DebugStaticValidators
	}
	return false
}

func (m *SchedulerParams) GetRewardFactorEpochElectionAny() []byte {
	if m != nil {
		return m.RewardFactorEpochElectionAny
	}
	return nil
}

type Scheduler struct {
	Params               *SchedulerParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Scheduler) Reset()         { *m = Scheduler{} }
func (m *Scheduler) String() string { return proto.CompactTextString(m) }
func (*Scheduler) ProtoMessage()    {}
func (*Scheduler) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{23}
}

func (m *Scheduler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scheduler.Unmarshal(m, b)
}
func (m *Scheduler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scheduler.Marshal(b, m, deterministic)
}
func (m *Scheduler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler.Merge(m, src)
}
func (m *Scheduler) XXX_Size() int {
	return xxx_messageInfo_Scheduler.Size(m)
}
func (m *Scheduler) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler proto.InternalMessageInfo

func (m *Scheduler) GetParams() *SchedulerParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type ConsensusParams struct {
	TimeoutCommit        *duration.Duration `protobuf:"bytes,1,opt,name=TimeoutCommit,proto3" json:"TimeoutCommit,omitempty"`
	SkipTimeoutCommit    bool               `protobuf:"varint,2,opt,name=SkipTimeoutCommit,proto3" json:"SkipTimeoutCommit,omitempty"`
	EmptyBlockInterval   *duration.Duration `protobuf:"bytes,3,opt,name=EmptyBlockInterval,proto3" json:"EmptyBlockInterval,omitempty"`
	MaxTxSize            uint64             `protobuf:"varint,4,opt,name=MaxTxSize,proto3" json:"MaxTxSize,omitempty"`
	MaxBlockSize         uint64             `protobuf:"varint,5,opt,name=MaxBlockSize,proto3" json:"MaxBlockSize,omitempty"`
	MaxBlockGas          uint64             `protobuf:"varint,6,opt,name=MaxBlockGas,proto3" json:"MaxBlockGas,omitempty"`
	MaxEvidenceAge       uint64             `protobuf:"varint,7,opt,name=MaxEvidenceAge,proto3" json:"MaxEvidenceAge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ConsensusParams) Reset()         { *m = ConsensusParams{} }
func (m *ConsensusParams) String() string { return proto.CompactTextString(m) }
func (*ConsensusParams) ProtoMessage()    {}
func (*ConsensusParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{24}
}

func (m *ConsensusParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusParams.Unmarshal(m, b)
}
func (m *ConsensusParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusParams.Marshal(b, m, deterministic)
}
func (m *ConsensusParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusParams.Merge(m, src)
}
func (m *ConsensusParams) XXX_Size() int {
	return xxx_messageInfo_ConsensusParams.Size(m)
}
func (m *ConsensusParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusParams.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusParams proto.InternalMessageInfo

func (m *ConsensusParams) GetTimeoutCommit() *duration.Duration {
	if m != nil {
		return m.TimeoutCommit
	}
	return nil
}

func (m *ConsensusParams) GetSkipTimeoutCommit() bool {
	if m != nil {
		return m.SkipTimeoutCommit
	}
	return false
}

func (m *ConsensusParams) GetEmptyBlockInterval() *duration.Duration {
	if m != nil {
		return m.EmptyBlockInterval
	}
	return nil
}

func (m *ConsensusParams) GetMaxTxSize() uint64 {
	if m != nil {
		return m.MaxTxSize
	}
	return 0
}

func (m *ConsensusParams) GetMaxBlockSize() uint64 {
	if m != nil {
		return m.MaxBlockSize
	}
	return 0
}

func (m *ConsensusParams) GetMaxBlockGas() uint64 {
	if m != nil {
		return m.MaxBlockGas
	}
	return 0
}

func (m *ConsensusParams) GetMaxEvidenceAge() uint64 {
	if m != nil {
		return m.MaxEvidenceAge
	}
	return 0
}

type Consensus struct {
	Backend              string           `protobuf:"bytes,1,opt,name=Backend,proto3" json:"Backend,omitempty"`
	Params               *ConsensusParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Consensus) Reset()         { *m = Consensus{} }
func (m *Consensus) String() string { return proto.CompactTextString(m) }
func (*Consensus) ProtoMessage()    {}
func (*Consensus) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{25}
}

func (m *Consensus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consensus.Unmarshal(m, b)
}
func (m *Consensus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consensus.Marshal(b, m, deterministic)
}
func (m *Consensus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consensus.Merge(m, src)
}
func (m *Consensus) XXX_Size() int {
	return xxx_messageInfo_Consensus.Size(m)
}
func (m *Consensus) XXX_DiscardUnknown() {
	xxx_messageInfo_Consensus.DiscardUnknown(m)
}

var xxx_messageInfo_Consensus proto.InternalMessageInfo

func (m *Consensus) GetBackend() string {
	if m != nil {
		return m.Backend
	}
	return ""
}

func (m *Consensus) GetParams() *ConsensusParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type State struct {
	// Height is the block height at which the document was generated.
	Height int64 `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	// Time is the time the genesis block was constructed.
	Time *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	// ChainID is the ID of the chain.
	ChainID string `protobuf:"bytes,3,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	// Registry is the registry genesis state.
	Registry *Registry `protobuf:"bytes,4,opt,name=registry,proto3" json:"registry,omitempty"`
	// Staking is the staking genesis state.
	Staking *Staking `protobuf:"bytes,5,opt,name=staking,proto3" json:"staking,omitempty"`
	// Scheduler is the scheduler genesis state.
	Scheduler *Scheduler `protobuf:"bytes,6,opt,name=scheduler,proto3" json:"scheduler,omitempty"`
	// Consensus is the consensus genesis state.
	Consensus            *Consensus `protobuf:"bytes,7,opt,name=consensus,proto3" json:"consensus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{26}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *State) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *State) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *State) GetRegistry() *Registry {
	if m != nil {
		return m.Registry
	}
	return nil
}

func (m *State) GetStaking() *Staking {
	if m != nil {
		return m.Staking
	}
	return nil
}

func (m *State) GetScheduler() *Scheduler {
	if m != nil {
		return m.Scheduler
	}
	return nil
}

func (m *State) GetConsensus() *Consensus {
	if m != nil {
		return m.Consensus
	}
	return nil
}

type GetByHeightRequest struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByHeightRequest) Reset()         { *m = GetByHeightRequest{} }
func (m *GetByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetByHeightRequest) ProtoMessage()    {}
func (*GetByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{27}
}

func (m *GetByHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByHeightRequest.Unmarshal(m, b)
}
func (m *GetByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByHeightRequest.Marshal(b, m, deterministic)
}
func (m *GetByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByHeightRequest.Merge(m, src)
}
func (m *GetByHeightRequest) XXX_Size() int {
	return xxx_messageInfo_GetByHeightRequest.Size(m)
}
func (m *GetByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByHeightRequest proto.InternalMessageInfo

func (m *GetByHeightRequest) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type GetByHeightResponse struct {
	State                *State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByHeightResponse) Reset()         { *m = GetByHeightResponse{} }
func (m *GetByHeightResponse) String() string { return proto.CompactTextString(m) }
func (*GetByHeightResponse) ProtoMessage()    {}
func (*GetByHeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff1eb66f0ea6a76, []int{28}
}

func (m *GetByHeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByHeightResponse.Unmarshal(m, b)
}
func (m *GetByHeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByHeightResponse.Marshal(b, m, deterministic)
}
func (m *GetByHeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByHeightResponse.Merge(m, src)
}
func (m *GetByHeightResponse) XXX_Size() int {
	return xxx_messageInfo_GetByHeightResponse.Size(m)
}
func (m *GetByHeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByHeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByHeightResponse proto.InternalMessageInfo

func (m *GetByHeightResponse) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

func init() {
	proto.RegisterType((*RegistryParameters)(nil), "state.RegistryParameters")
	proto.RegisterMapType((map[string]uint64)(nil), "state.RegistryParameters.GasCostsEntry")
	proto.RegisterType((*Entity)(nil), "state.Entity")
	proto.RegisterType((*Registry)(nil), "state.Registry")
	proto.RegisterType((*Slash)(nil), "state.Slash")
	proto.RegisterType((*RewardStep)(nil), "state.RewardStep")
	proto.RegisterType((*CommissionScheduleRules)(nil), "state.CommissionScheduleRules")
	proto.RegisterType((*StakingParameters)(nil), "state.StakingParameters")
	proto.RegisterMapType((map[string]uint64)(nil), "state.StakingParameters.GasCostsEntry")
	proto.RegisterMapType((map[string]*Slash)(nil), "state.StakingParameters.SlashingEntry")
	proto.RegisterMapType((map[int64][]byte)(nil), "state.StakingParameters.ThresholdsEntry")
	proto.RegisterMapType((map[string]bool)(nil), "state.StakingParameters.UndisableTransfersFromEntry")
	proto.RegisterType((*Staking)(nil), "state.Staking")
	proto.RegisterMapType((map[string]*DebondingDelegationEntry)(nil), "state.Staking.DebondingDelegationsEntry")
	proto.RegisterMapType((map[string]*DelegationEntry)(nil), "state.Staking.DelegationsEntry")
	proto.RegisterMapType((map[string]*Account)(nil), "state.Staking.LedgerEntry")
	proto.RegisterType((*Delegation)(nil), "state.Delegation")
	proto.RegisterType((*DebondingDelegation)(nil), "state.DebondingDelegation")
	proto.RegisterType((*DelegationEntry)(nil), "state.DelegationEntry")
	proto.RegisterMapType((map[string]*Delegation)(nil), "state.DelegationEntry.EntriesEntry")
	proto.RegisterType((*DebondingDelegationInnerEntry)(nil), "state.DebondingDelegationInnerEntry")
	proto.RegisterType((*DebondingDelegationEntry)(nil), "state.DebondingDelegationEntry")
	proto.RegisterMapType((map[string]*DebondingDelegationInnerEntry)(nil), "state.DebondingDelegationEntry.EntriesEntry")
	proto.RegisterType((*GeneralAccount)(nil), "state.GeneralAccount")
	proto.RegisterType((*SharePool)(nil), "state.SharePool")
	proto.RegisterType((*CommissionRateStep)(nil), "state.CommissionRateStep")
	proto.RegisterType((*CommissionRateBoundStep)(nil), "state.CommissionRateBoundStep")
	proto.RegisterType((*CommissionSchedule)(nil), "state.CommissionSchedule")
	proto.RegisterType((*ThresholdKinds)(nil), "state.ThresholdKinds")
	proto.RegisterType((*StakeAccumulator)(nil), "state.StakeAccumulator")
	proto.RegisterMapType((map[string]*ThresholdKinds)(nil), "state.StakeAccumulator.ClaimsEntry")
	proto.RegisterType((*EscrowAccount)(nil), "state.EscrowAccount")
	proto.RegisterType((*Account)(nil), "state.Account")
	proto.RegisterType((*SchedulerParams)(nil), "state.SchedulerParams")
	proto.RegisterType((*Scheduler)(nil), "state.Scheduler")
	proto.RegisterType((*ConsensusParams)(nil), "state.ConsensusParams")
	proto.RegisterType((*Consensus)(nil), "state.Consensus")
	proto.RegisterType((*State)(nil), "state.State")
	proto.RegisterType((*GetByHeightRequest)(nil), "state.GetByHeightRequest")
	proto.RegisterType((*GetByHeightResponse)(nil), "state.GetByHeightResponse")
}

func init() { proto.RegisterFile("grpc/state/statepb/state.proto", fileDescriptor_fff1eb66f0ea6a76) }

var fileDescriptor_fff1eb66f0ea6a76 = []byte{
	// 2035 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xdd, 0x6e, 0xdb, 0xc8,
	0x15, 0xae, 0x6d, 0x59, 0xb2, 0x8e, 0xe4, 0x9f, 0xcc, 0x26, 0x8e, 0xac, 0x66, 0x63, 0x2f, 0x6b,
	0x78, 0xdd, 0xae, 0x21, 0x17, 0xee, 0x36, 0x48, 0x36, 0xdd, 0x2d, 0xfc, 0x1f, 0x23, 0xb1, 0x61,
	0x8c, 0x1c, 0xa3, 0x28, 0x50, 0xb8, 0x63, 0x72, 0x22, 0x11, 0xa6, 0x66, 0x58, 0x72, 0xe4, 0x48,
	0x0b, 0xf4, 0x25, 0xfa, 0x02, 0x6d, 0x1f, 0xa3, 0xe8, 0x6d, 0xdf, 0xa1, 0x57, 0x7d, 0x81, 0xbe,
	0x41, 0xef, 0x8a, 0xf9, 0xa3, 0x48, 0x8a, 0x8c, 0xb7, 0xe8, 0x8d, 0xad, 0x39, 0xe7, 0x3b, 0x67,
	0xce, 0xdf, 0x9c, 0x39, 0x43, 0x78, 0xde, 0x8b, 0x42, 0x77, 0x37, 0x16, 0x44, 0x50, 0xfd, 0x37,
	0xbc, 0xd5, 0xff, 0x3b, 0x61, 0xc4, 0x05, 0x47, 0xf3, 0x6a, 0xd1, 0x5e, 0xef, 0x71, 0xde, 0x0b,
	0xe8, 0xae, 0x22, 0xde, 0x0e, 0x3f, 0xec, 0x0a, 0x7f, 0x40, 0x63, 0x41, 0x06, 0xa1, 0xc6, 0xb5,
	0x9f, 0xe7, 0x01, 0xde, 0x30, 0x22, 0xc2, 0xe7, 0x4c, 0xf3, 0x9d, 0x7f, 0x55, 0x00, 0x61, 0xda,
	0xf3, 0x63, 0x11, 0x8d, 0x2f, 0x49, 0x44, 0x06, 0x54, 0xd0, 0x28, 0x46, 0xa7, 0xb0, 0xe1, 0xd1,
	0xdb, 0x61, 0xef, 0x86, 0x04, 0x01, 0xff, 0x78, 0x33, 0x64, 0x11, 0x1f, 0x0a, 0x72, 0x1b, 0xd0,
	0x1b, 0xe2, 0x79, 0x11, 0x8d, 0x63, 0x1a, 0xb7, 0x66, 0x36, 0x66, 0xb6, 0x17, 0xf0, 0xe7, 0x0a,
	0xb7, 0x2f, 0x61, 0xef, 0x13, 0xd4, 0xbe, 0x05, 0xa1, 0x17, 0xb0, 0x7a, 0x94, 0x00, 0xae, 0x68,
	0x2c, 0xf0, 0x90, 0x29, 0x1b, 0x5b, 0xb3, 0x4a, 0xbc, 0x84, 0x8b, 0xae, 0x61, 0x6b, 0xc2, 0x39,
	0x66, 0xc2, 0x17, 0xe3, 0xae, 0xdf, 0x63, 0xd4, 0xbb, 0xe0, 0x1e, 0x35, 0x06, 0x2b, 0x3f, 0x5a,
	0x73, 0x4a, 0xcf, 0x0f, 0x44, 0xa3, 0x9f, 0xc1, 0x8a, 0x42, 0x1e, 0x8c, 0x43, 0x12, 0xc7, 0x5d,
	0x41, 0xee, 0x68, 0xab, 0xa2, 0x34, 0x4c, 0xd1, 0xd1, 0x77, 0xd0, 0x3e, 0xf2, 0x63, 0xe9, 0x8f,
	0x31, 0x2b, 0xb3, 0xef, 0xbc, 0x92, 0xfa, 0x04, 0x02, 0x61, 0xd8, 0x34, 0xdc, 0xb7, 0x74, 0x7c,
	0x4e, 0x18, 0xe9, 0xd1, 0xa8, 0x48, 0x53, 0x55, 0x69, 0xfa, 0x41, 0x58, 0x74, 0x08, 0x0b, 0xa7,
	0x24, 0x3e, 0xe4, 0xb1, 0x88, 0x5b, 0xb5, 0x8d, 0xb9, 0xed, 0xc6, 0xde, 0x97, 0x1d, 0x5d, 0x17,
	0xd3, 0x59, 0xec, 0x58, 0xe4, 0x31, 0x13, 0xd1, 0x18, 0x27, 0x82, 0x68, 0x07, 0x1e, 0x9d, 0x93,
	0x91, 0x8c, 0xcd, 0xf1, 0x28, 0xf4, 0x8d, 0x15, 0x0b, 0x1b, 0x33, 0xdb, 0x15, 0x3c, 0xcd, 0x68,
	0xbf, 0x86, 0xc5, 0x8c, 0x22, 0xb4, 0x02, 0x73, 0x77, 0x74, 0xac, 0xf2, 0x5f, 0xc7, 0xf2, 0x27,
	0x7a, 0x0c, 0xf3, 0xf7, 0x24, 0x18, 0x52, 0x95, 0xd4, 0x0a, 0xd6, 0x8b, 0x6f, 0x66, 0x5f, 0xce,
	0x38, 0x5b, 0x50, 0xd5, 0xf9, 0x40, 0xcf, 0xa0, 0x7e, 0x39, 0xbc, 0x0d, 0x7c, 0xf7, 0x6d, 0x22,
	0x3b, 0x21, 0x38, 0x21, 0x2c, 0x58, 0x07, 0xd0, 0x2b, 0x80, 0x30, 0x71, 0x42, 0x41, 0x1b, 0x7b,
	0x6b, 0xa5, 0x5e, 0xe2, 0x14, 0x18, 0xfd, 0x14, 0x16, 0xa8, 0xdc, 0xce, 0x57, 0x05, 0x26, 0xc3,
	0xb3, 0x68, 0x04, 0xb5, 0x15, 0x38, 0x61, 0x3b, 0xa7, 0x30, 0xdf, 0x0d, 0x48, 0xdc, 0x47, 0xab,
	0x50, 0xdd, 0x1f, 0xf0, 0x21, 0x13, 0x6a, 0xab, 0x26, 0x36, 0x2b, 0xb4, 0x05, 0x4b, 0x27, 0x11,
	0xa5, 0xdf, 0xd3, 0x33, 0x26, 0x68, 0x74, 0x4f, 0x02, 0xe3, 0x5d, 0x8e, 0xea, 0xbc, 0x04, 0xc0,
	0xf4, 0x23, 0x89, 0xbc, 0xae, 0xa0, 0xa1, 0x0c, 0xc5, 0x7b, 0x26, 0xfc, 0x40, 0x29, 0xab, 0x60,
	0xbd, 0x90, 0xd4, 0xae, 0x4b, 0x02, 0x1d, 0xa0, 0x26, 0xd6, 0x0b, 0xe7, 0x6f, 0x33, 0xf0, 0xf4,
	0x90, 0x0f, 0x06, 0x7e, 0x1c, 0xfb, 0x9c, 0x75, 0xdd, 0x3e, 0xf5, 0x86, 0xb2, 0x94, 0x02, 0x1a,
	0xa3, 0x0e, 0x20, 0x4c, 0x04, 0x3d, 0xec, 0x13, 0xd6, 0x9b, 0x58, 0xa0, 0x95, 0x16, 0x70, 0xd0,
	0x26, 0x2c, 0x4a, 0xea, 0x01, 0x1f, 0x32, 0xef, 0x1d, 0x25, 0x9e, 0x31, 0x36, 0x4b, 0x44, 0x0e,
	0x34, 0xcf, 0xc9, 0x48, 0xd2, 0xa4, 0xb1, 0xb1, 0x3a, 0x3c, 0x73, 0x38, 0x43, 0x93, 0x9a, 0xce,
	0xc9, 0x48, 0xc9, 0x68, 0x50, 0x45, 0x81, 0xb2, 0x44, 0xe7, 0x4f, 0x00, 0x8f, 0xe4, 0x31, 0xf1,
	0x59, 0x2f, 0xd5, 0x37, 0xde, 0x00, 0x5c, 0xf5, 0x23, 0x1a, 0xf7, 0x79, 0xe0, 0xc9, 0xd4, 0xc9,
	0x0c, 0x6c, 0x9b, 0x0c, 0x4c, 0xa1, 0x3b, 0x13, 0xa8, 0xae, 0xd0, 0x94, 0xac, 0xac, 0xd1, 0x23,
	0x7a, 0xcb, 0x99, 0xe7, 0xb3, 0x5e, 0x2e, 0x01, 0xd3, 0x0c, 0xf4, 0x0a, 0x96, 0x4c, 0x0e, 0x4c,
	0x10, 0x5b, 0x73, 0x6a, 0xef, 0x47, 0x49, 0xd9, 0xd8, 0x04, 0xe1, 0x1c, 0x10, 0xbd, 0x81, 0x75,
	0xd9, 0x2b, 0x7c, 0xd6, 0xd3, 0x8c, 0xc4, 0x86, 0x8b, 0xe1, 0x80, 0x46, 0x44, 0xf0, 0x48, 0x05,
	0xa0, 0x82, 0x1f, 0x82, 0xa1, 0x77, 0xf0, 0x45, 0x31, 0xe4, 0x88, 0x32, 0x3e, 0xf0, 0x99, 0xd2,
	0x35, 0xaf, 0x74, 0x3d, 0x0c, 0x44, 0xbf, 0x29, 0xad, 0x0d, 0xd5, 0x30, 0x1a, 0x7b, 0xcf, 0x8d,
	0x6f, 0x25, 0x28, 0x5c, 0x5a, 0x5a, 0x07, 0xb0, 0xa0, 0x2a, 0xdf, 0x67, 0x3d, 0xd3, 0x43, 0xb6,
	0x4a, 0x53, 0x64, 0x81, 0xa6, 0x85, 0xd8, 0xa5, 0xd4, 0x91, 0xf4, 0xa1, 0x85, 0x07, 0x74, 0x94,
	0xb5, 0xa1, 0x9f, 0xc3, 0x67, 0xe7, 0x3e, 0x3b, 0xa2, 0x01, 0xed, 0xa9, 0x4e, 0x63, 0x4e, 0x61,
	0x5d, 0x1d, 0x91, 0x22, 0x96, 0xea, 0xde, 0xba, 0x4b, 0x5e, 0x45, 0x84, 0xc5, 0x1f, 0x64, 0x7f,
	0x00, 0xd3, 0xbd, 0x73, 0x74, 0x55, 0x40, 0x9a, 0x36, 0x51, 0xd3, 0x6a, 0x28, 0xf0, 0x34, 0x03,
	0x05, 0xb0, 0xfa, 0x9e, 0x79, 0x39, 0x1d, 0x27, 0x11, 0x1f, 0xb4, 0x9a, 0xca, 0xbb, 0xaf, 0x4b,
	0xbd, 0x2b, 0x16, 0xd3, 0xbe, 0x96, 0xe8, 0x94, 0xc7, 0xf0, 0x84, 0xd2, 0x6e, 0x18, 0xf8, 0xe2,
	0x9a, 0x0b, 0xda, 0x5a, 0x54, 0x2e, 0x67, 0x68, 0x68, 0x1b, 0x96, 0xed, 0xfa, 0x32, 0xe2, 0x21,
	0x8f, 0x69, 0x6b, 0x49, 0xc1, 0xf2, 0x64, 0xf4, 0x12, 0x9e, 0xea, 0x3a, 0x3a, 0x21, 0xae, 0xe0,
	0xd1, 0x71, 0xc8, 0xdd, 0xbe, 0xbe, 0xfe, 0x5a, 0xcb, 0x4a, 0xa2, 0x8c, 0x8d, 0x7e, 0x05, 0x6b,
	0x69, 0xd6, 0x41, 0xc0, 0xdd, 0x3b, 0xa3, 0xd5, 0x6b, 0xad, 0x28, 0xd9, 0x72, 0x40, 0xfb, 0x5b,
	0x58, 0xce, 0x9d, 0xe0, 0xf4, 0xd5, 0x30, 0x57, 0x70, 0x35, 0x34, 0x53, 0x57, 0x43, 0xfb, 0x0c,
	0x16, 0x33, 0xd5, 0x55, 0x70, 0xaf, 0x38, 0x69, 0xe1, 0xc6, 0x5e, 0xd3, 0x26, 0x41, 0x8a, 0xa5,
	0x55, 0xfd, 0x3f, 0x57, 0x54, 0xfb, 0x0c, 0x7e, 0xfc, 0x89, 0x1c, 0x3e, 0xa4, 0x6a, 0x21, 0x7d,
	0xdb, 0xfd, 0xbb, 0x02, 0x35, 0x53, 0x21, 0xe8, 0x0b, 0x68, 0x0a, 0x2e, 0x48, 0x70, 0x13, 0x0f,
	0xc3, 0x30, 0x18, 0x9b, 0xcb, 0xa5, 0xa1, 0x68, 0x5d, 0x45, 0x42, 0xeb, 0xd0, 0x70, 0xf9, 0x60,
	0xc0, 0xd9, 0x4d, 0xc8, 0x79, 0x60, 0x22, 0x04, 0x9a, 0x74, 0xc9, 0x79, 0x80, 0x5e, 0x66, 0x6e,
	0xc2, 0x39, 0x15, 0x84, 0x56, 0x59, 0x25, 0x66, 0x2e, 0xc2, 0x3d, 0xa8, 0x06, 0xd4, 0xeb, 0x51,
	0xd9, 0xbc, 0x64, 0xfd, 0xb6, 0xb3, 0x52, 0x9d, 0x77, 0x8a, 0xa9, 0xab, 0xd4, 0x20, 0xd1, 0x3e,
	0x34, 0xbc, 0xe4, 0x44, 0xc4, 0xad, 0x79, 0x25, 0xb8, 0x9e, 0x13, 0x9c, 0x9c, 0x19, 0x73, 0x9e,
	0xd3, 0x32, 0xe8, 0x77, 0xf0, 0xc4, 0xb3, 0xcd, 0xf9, 0x26, 0xad, 0xac, 0x5a, 0x74, 0x15, 0x74,
	0x92, 0x46, 0x3e, 0xa5, 0xf5, 0xb1, 0x57, 0xc0, 0x6a, 0x9f, 0x41, 0x23, 0x65, 0x78, 0x41, 0x6a,
	0x36, 0xb3, 0x05, 0xb3, 0x64, 0xf6, 0xdb, 0x77, 0x5d, 0xd9, 0x3f, 0xd2, 0x59, 0xbf, 0x96, 0x83,
	0x60, 0x76, 0xd3, 0x02, 0x7d, 0x3b, 0x59, 0x7d, 0xab, 0x46, 0xdf, 0x44, 0x52, 0x5b, 0x9b, 0xd2,
	0xdb, 0x87, 0xb5, 0x52, 0xaf, 0x0a, 0x36, 0xf8, 0x65, 0x76, 0x83, 0xf5, 0x64, 0x83, 0x29, 0x15,
	0xf9, 0x9d, 0x9c, 0x4d, 0x80, 0x54, 0x03, 0x5b, 0x85, 0x6a, 0xdc, 0x27, 0x91, 0x99, 0xcb, 0x9b,
	0xd8, 0xac, 0x9c, 0x2e, 0x7c, 0x56, 0xa0, 0xac, 0x0c, 0x2e, 0x2f, 0x7f, 0x0d, 0x3f, 0x66, 0xde,
	0x95, 0x3f, 0xb0, 0xc7, 0x25, 0x4b, 0x74, 0xfe, 0x3c, 0x03, 0xcb, 0x39, 0xcb, 0xd0, 0xb7, 0x50,
	0xa3, 0x4c, 0x44, 0x3e, 0xb5, 0xf7, 0xfe, 0x4f, 0x8a, 0x83, 0x25, 0x27, 0x31, 0x89, 0xd2, 0xfe,
	0x58, 0x99, 0xf6, 0x39, 0x34, 0xd3, 0x8c, 0x82, 0x50, 0x7d, 0x99, 0x0d, 0xd5, 0xa3, 0x29, 0xf5,
	0xe9, 0xe0, 0x70, 0xf8, 0xbc, 0xc0, 0xed, 0x33, 0xc6, 0x6c, 0xed, 0x5c, 0x40, 0x61, 0x89, 0x19,
	0xdb, 0xdb, 0xe5, 0x79, 0x28, 0x2e, 0x4d, 0xe7, 0x1f, 0x33, 0xd0, 0x2a, 0xcb, 0x1a, 0x3a, 0xc9,
	0xc7, 0x66, 0xe7, 0x81, 0x3c, 0x97, 0x04, 0xe9, 0xf7, 0x0f, 0x06, 0xe9, 0x9b, 0x6c, 0x90, 0x36,
	0xcb, 0xf7, 0x99, 0xc4, 0x22, 0x1d, 0xb7, 0x10, 0x96, 0x4e, 0x29, 0xa3, 0x11, 0x09, 0xcc, 0x99,
	0x41, 0x2d, 0xa8, 0x1d, 0x90, 0x80, 0x30, 0x97, 0x9a, 0x52, 0xb1, 0x4b, 0xd9, 0x07, 0x2f, 0xb8,
	0xa4, 0x9b, 0x96, 0xaa, 0x16, 0x72, 0x70, 0x4d, 0xba, 0xe8, 0x05, 0x17, 0x07, 0xf4, 0x03, 0x8f,
	0xa8, 0xea, 0x5d, 0x15, 0x5c, 0xc0, 0x71, 0x4e, 0xa1, 0xde, 0x95, 0xb5, 0xa7, 0x1a, 0x5e, 0xf9,
	0x66, 0x1b, 0xd0, 0xb8, 0x52, 0xad, 0x53, 0x57, 0xad, 0xee, 0x95, 0x69, 0x92, 0xf3, 0x1d, 0xa0,
	0xc9, 0xc4, 0x63, 0xc7, 0x59, 0x35, 0x79, 0x0b, 0x12, 0x09, 0x3b, 0x8f, 0xab, 0x05, 0x42, 0x50,
	0x91, 0x08, 0xa3, 0x46, 0xfd, 0x76, 0xdc, 0xf4, 0xc0, 0x95, 0x8c, 0xcd, 0x9f, 0x50, 0xd2, 0x82,
	0x9a, 0x84, 0x9d, 0xfb, 0xcc, 0xe8, 0xb1, 0xcb, 0x84, 0x43, 0x46, 0xca, 0x71, 0xcb, 0x21, 0x23,
	0xe7, 0x8f, 0x69, 0x23, 0x93, 0x19, 0x74, 0x17, 0xe6, 0x25, 0xc0, 0x56, 0xc7, 0xda, 0xd4, 0x64,
	0x67, 0xdd, 0xc1, 0x1a, 0x87, 0x5e, 0x40, 0x55, 0x59, 0x67, 0x5f, 0x39, 0xcf, 0x0b, 0x25, 0x12,
	0x07, 0xb0, 0x41, 0x3b, 0x5b, 0xb0, 0x94, 0x5c, 0xd9, 0x6f, 0x7d, 0xe6, 0xc5, 0xd2, 0x35, 0xf5,
	0x43, 0x6d, 0x3d, 0x8f, 0xf5, 0xc2, 0xf9, 0xeb, 0x0c, 0xac, 0xa8, 0x47, 0xf0, 0xbe, 0xeb, 0x0e,
	0x07, 0xc3, 0x40, 0x4d, 0xa4, 0xaf, 0xa1, 0x7a, 0x18, 0x10, 0x7f, 0x90, 0x3f, 0xe0, 0x79, 0x60,
	0x47, 0xa3, 0xcc, 0xe5, 0xa2, 0x17, 0xed, 0x4b, 0x68, 0xa4, 0xc8, 0x05, 0x95, 0xfb, 0x55, 0xb6,
	0x72, 0x9f, 0x18, 0xe5, 0x59, 0x73, 0xd3, 0xa5, 0xfa, 0x9f, 0x19, 0x58, 0x3c, 0x8e, 0xdd, 0x88,
	0x7f, 0xb4, 0xa5, 0xba, 0x0d, 0xd5, 0x7d, 0x57, 0xf8, 0xf7, 0xd4, 0x3c, 0x1a, 0x57, 0xac, 0x81,
	0xb6, 0xbe, 0xb0, 0xe1, 0xa3, 0x0e, 0xd4, 0x93, 0x23, 0x61, 0x36, 0x9c, 0x06, 0x4f, 0x20, 0xe8,
	0xac, 0x28, 0x6d, 0xe6, 0x42, 0x5e, 0x2b, 0x9f, 0xc3, 0x8b, 0x72, 0x7d, 0x38, 0x1d, 0x59, 0xf5,
	0xc0, 0x68, 0xec, 0x3d, 0x2d, 0x89, 0x27, 0x9e, 0x12, 0x70, 0xfa, 0x50, 0xb3, 0x4e, 0xef, 0x42,
	0xcd, 0x9c, 0x58, 0xe3, 0xb5, 0x8d, 0x5c, 0xf6, 0x1c, 0x63, 0x8b, 0x42, 0x3b, 0x50, 0xd5, 0x61,
	0x33, 0x8e, 0x3f, 0xb6, 0x2f, 0xe4, 0x74, 0x2c, 0xb1, 0xc1, 0x38, 0x7f, 0x9f, 0x85, 0x65, 0x6b,
	0x7b, 0xa4, 0x86, 0x0d, 0xfd, 0x42, 0xf4, 0xd9, 0x35, 0x09, 0x7c, 0x4f, 0x5a, 0x13, 0x9b, 0x79,
	0x2f, 0x4b, 0x34, 0xef, 0xc8, 0x14, 0x6a, 0x36, 0x79, 0x47, 0xa6, 0x50, 0x2f, 0x60, 0x35, 0x43,
	0xb8, 0x54, 0x4d, 0xc9, 0x17, 0x63, 0xf3, 0x36, 0x2d, 0xe1, 0xfe, 0x4f, 0x1f, 0x72, 0xbe, 0x86,
	0x27, 0x8a, 0xd6, 0x15, 0x44, 0xf8, 0x6e, 0xca, 0x22, 0xfd, 0x0d, 0xa7, 0x98, 0x89, 0x0e, 0xe0,
	0xd9, 0xd4, 0xdc, 0x7c, 0x1c, 0x50, 0x57, 0xbd, 0x47, 0xd8, 0x58, 0xbd, 0xc2, 0x9a, 0xf8, 0x93,
	0x18, 0xe7, 0x35, 0xd4, 0x93, 0xe0, 0xa1, 0x0e, 0x54, 0xd5, 0x84, 0x66, 0xbf, 0x69, 0xd8, 0x69,
	0x22, 0x17, 0x5e, 0x6c, 0x50, 0xce, 0x3f, 0x67, 0x61, 0xf9, 0x90, 0xb3, 0x98, 0xb2, 0x78, 0x18,
	0x9b, 0xd0, 0xff, 0x1a, 0x16, 0xe5, 0x0d, 0xcc, 0x87, 0x42, 0x95, 0x96, 0x48, 0x3e, 0x8f, 0xe8,
	0xef, 0x7c, 0x1d, 0xfb, 0x9d, 0xaf, 0x73, 0x64, 0xbe, 0xf3, 0xe1, 0x2c, 0x5e, 0x3e, 0x8b, 0xba,
	0x77, 0x7e, 0x98, 0x55, 0xa2, 0x07, 0xd9, 0x69, 0x86, 0xac, 0xfb, 0xe3, 0x41, 0x28, 0xc6, 0x6a,
	0xf0, 0x4f, 0x9e, 0xe1, 0x73, 0x0f, 0xed, 0x59, 0x20, 0x84, 0x9e, 0x41, 0xfd, 0x9c, 0x8c, 0xae,
	0x46, 0x5d, 0xff, 0x7b, 0x6a, 0x5e, 0xd4, 0x13, 0x82, 0xf9, 0x30, 0xa1, 0x24, 0x14, 0x40, 0x3f,
	0x93, 0x33, 0x34, 0x79, 0x05, 0xd8, 0xf5, 0x29, 0xd1, 0xaf, 0xe0, 0x0a, 0x4e, 0x93, 0xd0, 0x16,
	0x2c, 0x9d, 0x93, 0xd1, 0xf1, 0xbd, 0xef, 0x51, 0xe6, 0xd2, 0xfd, 0x1e, 0x6d, 0xd5, 0xf4, 0x27,
	0x9b, 0x2c, 0xd5, 0x79, 0x0f, 0xf5, 0x24, 0xb0, 0xfa, 0xce, 0x71, 0xef, 0x28, 0xf3, 0x4c, 0x3b,
	0xb2, 0xcb, 0x54, 0xc2, 0xb2, 0xe3, 0x5f, 0x2e, 0x29, 0x49, 0xc2, 0xfe, 0x32, 0xab, 0xee, 0x09,
	0x41, 0xe5, 0x78, 0xf5, 0x86, 0xfa, 0xbd, 0xbe, 0x30, 0x47, 0xc3, 0xac, 0x50, 0x07, 0x2a, 0xc9,
	0x54, 0x25, 0xa7, 0x8c, 0x7c, 0x04, 0xaf, 0xec, 0xe7, 0x5b, 0xac, 0x70, 0xd2, 0xb6, 0xc3, 0x3e,
	0xf1, 0xd9, 0xd9, 0x91, 0x0a, 0x7a, 0x1d, 0xdb, 0x25, 0xfa, 0x0a, 0x16, 0x22, 0xf3, 0x2d, 0xcc,
	0xb4, 0x8f, 0xe5, 0xdc, 0x27, 0x32, 0x9c, 0x00, 0xd0, 0x36, 0xd4, 0x62, 0x3d, 0x72, 0xab, 0xc0,
	0x4e, 0x06, 0x63, 0x33, 0x88, 0x63, 0xcb, 0x96, 0x8d, 0x31, 0xb6, 0xe5, 0x68, 0xbe, 0x33, 0xac,
	0xe4, 0xcb, 0x14, 0x4f, 0x20, 0x12, 0xef, 0xda, 0x68, 0xa8, 0x60, 0x4f, 0xf0, 0x49, 0x94, 0xf0,
	0x04, 0xe2, 0xec, 0x00, 0x3a, 0xa5, 0xe2, 0x60, 0xac, 0xe3, 0x81, 0xe9, 0x1f, 0x86, 0x34, 0x16,
	0x32, 0x5c, 0xfd, 0x4c, 0xb8, 0xf4, 0xca, 0x79, 0x05, 0x9f, 0x65, 0xd0, 0x71, 0x28, 0x15, 0xc9,
	0x67, 0xa1, 0xda, 0xc2, 0x14, 0x7f, 0x73, 0xe2, 0x8c, 0xa0, 0x58, 0xb3, 0xf6, 0xae, 0xa1, 0xa9,
	0xd6, 0x5d, 0x1a, 0xdd, 0xfb, 0x2e, 0x45, 0x27, 0xd0, 0x48, 0xa9, 0x42, 0x6b, 0x49, 0x93, 0xcc,
	0x1b, 0xd3, 0x6e, 0x17, 0xb1, 0xf4, 0xce, 0xce, 0x8f, 0x0e, 0xea, 0xbf, 0xad, 0x99, 0xef, 0xf1,
	0xb7, 0x55, 0x95, 0xb6, 0x5f, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x67, 0xf2, 0xae, 0xac,
	0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StateServiceClient is the client API for StateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StateServiceClient interface {
	GetByHeight(ctx context.Context, in *GetByHeightRequest, opts ...grpc.CallOption) (*GetByHeightResponse, error)
}

type stateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStateServiceClient(cc grpc.ClientConnInterface) StateServiceClient {
	return &stateServiceClient{cc}
}

func (c *stateServiceClient) GetByHeight(ctx context.Context, in *GetByHeightRequest, opts ...grpc.CallOption) (*GetByHeightResponse, error) {
	out := new(GetByHeightResponse)
	err := c.cc.Invoke(ctx, "/state.StateService/GetByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StateServiceServer is the server API for StateService service.
type StateServiceServer interface {
	GetByHeight(context.Context, *GetByHeightRequest) (*GetByHeightResponse, error)
}

// UnimplementedStateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStateServiceServer struct {
}

func (*UnimplementedStateServiceServer) GetByHeight(ctx context.Context, req *GetByHeightRequest) (*GetByHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByHeight not implemented")
}

func RegisterStateServiceServer(s *grpc.Server, srv StateServiceServer) {
	s.RegisterService(&_StateService_serviceDesc, srv)
}

func _StateService_GetByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServiceServer).GetByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/state.StateService/GetByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServiceServer).GetByHeight(ctx, req.(*GetByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "state.StateService",
	HandlerType: (*StateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByHeight",
			Handler:    _StateService_GetByHeight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/state/statepb/state.proto",
}
